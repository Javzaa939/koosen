from rest_framework import serializers

from .settings import NOTIFICATION_MODEL

from .utils import get_model

class NotificationListSerializer(serializers.ModelSerializer):

    icon = serializers.SerializerMethodField()
    name = serializers.SerializerMethodField()
    lvl_color = serializers.CharField(source="ntype.color", default="")
    lvl_name = serializers.CharField(source="ntype.name", default="")
    created_at = serializers.DateTimeField(format="%Y-%m-%d %H:%M:%S")

    class Meta:
        model = get_model(NOTIFICATION_MODEL)
        fields = "id", 'title', 'url', 'content', 'lvl_name', 'lvl_color', 'name', 'icon', 'created_at'

    def get_model(self):
        return self.Meta.model

    def get_name(self, obj):
        name = None

        Notification = self.get_model()

        form_field = {
            Notification.FROM_KIND_ORG: ["from_org", "name"],
            Notification.FROM_KIND_SUBORG: ["from_sub_org", 'name'],
            Notification.FROM_KIND_SALBAR: ["from_salbar", 'name'],
            Notification.FROM_KIND_POS: ["from_org_position", 'name'],
            Notification.FROM_KIND_EMPLOYEE: ["from_employees", 'full_name'],
            Notification.FROM_KIND_USER: ["from_users", 'full_name'],
            Notification.FROM_KIND_OYUTAN: ["from_oyutan", 'notif_full_name'],
        }.get(obj.from_kind)

        if not form_field:
            return None

        from_obj = getattr(obj, form_field[0])
        if from_obj:
            name = getattr(from_obj, form_field[1])

        return name

    def get_icon(self, obj):
        icon = None
        Notification = self.get_model()

        form_field = {
            Notification.FROM_KIND_ORG: ["from_org", "logo"],
            Notification.FROM_KIND_SUBORG: ["from_sub_org", 'logo'],
            Notification.FROM_KIND_SALBAR: ["from_salbar", 'logo'],
            Notification.FROM_KIND_POS: ["from_org_position", ''],
            Notification.FROM_KIND_EMPLOYEE: ["from_employees", 'real_photo'],
            Notification.FROM_KIND_USER: ["from_users", 'real_photo'],
            Notification.FROM_KIND_OYUTAN: ["from_oyutan", 'image'],
        }.get(obj.from_kind)

        if not form_field:
            return None

        img_field = form_field[1]

        from_obj = getattr(obj, form_field[0])
        if from_obj and img_field and hasattr(from_obj, img_field):
            icon_obj = getattr(from_obj, img_field)
            icon = icon_obj.url if icon_obj else None

        return icon
