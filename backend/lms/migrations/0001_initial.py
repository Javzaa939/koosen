# Generated by Django 4.1 on 2025-08-14 17:33

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.functions.text
import django.utils.timezone
import lms.models
import shortuuidfield.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccessHistoryLms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('system_type', models.PositiveIntegerField(choices=[(1, 'Сургалтын удирдлагийн систем'), (2, 'Багшийн систем'), (3, 'Oюутны систем'), (4, 'Санхүүгийн систем'), (5, 'Хяналтын систем'), (6, 'Элсэлтийн систем'), (7, 'Номын сангийн систем')], db_index=True, verbose_name='Нэвтэрсэн системийн нэр')),
                ('device_type', models.PositiveIntegerField(choices=[(1, 'Утас'), (2, 'Таблет'), (3, 'Компютер')], db_index=True, verbose_name='Нэвтэрсэн төхөөрөмжийн төрөл')),
                ('device_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Нэвтэрсэн төхөөрөмжийн нэр')),
                ('browser', models.CharField(blank=True, max_length=50, null=True, verbose_name='Нэвтэрсэн хэрэглэгчийн вэб хөтөч')),
                ('os_type', models.CharField(blank=True, max_length=50, null=True, verbose_name='Нэвтэрсэн төхөөрөмжийн үйлдлийн систем')),
                ('ip', models.CharField(blank=True, max_length=16, null=True, verbose_name='Нэвтэрсэн хэрэглэгчийн IP хаяг')),
                ('is_logged', models.BooleanField(default=False, verbose_name='Нэвтрэлт амжилттай болсон эсэх')),
                ('in_time', models.DateTimeField(auto_now_add=True)),
                ('out_time', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AdmissionBottomScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bottom_score', models.PositiveIntegerField(default=400, verbose_name='Босго оноо')),
                ('score_type', models.PositiveIntegerField(choices=[(1, 'Суурь шалгалт'), (2, 'Дагалдах шалгалт')], db_index=True, default=1, verbose_name='Шалгалтын хичээлийн төрөл')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='AdmissionIndicator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.PositiveSmallIntegerField(choices=[(1, 'Нийтлэг шалгуур'), (2, 'Тусгай шалгуур')], db_index=True, default=1, verbose_name='Шалгуурын төpөл')),
                ('value', models.PositiveIntegerField(choices=[(1, 'ЭЕШ-ын оноо'), (2, 'Хяналтын тоо'), (3, 'Нас'), (4, 'Ял шийтгэл'), (5, 'Эрүүл мэнд анхан'), (6, 'Эрүүл мэнд мэргэжлийн'), (7, 'Ур чадвар'), (8, 'Сэтгэл зүйн сорил'), (9, 'Төгссөн сургууль'), (10, 'Cудалгааны ажлын агуулга чиглэл, зорилгын талаар бичсэн танилцуулга'), (11, 'Хээрийн бэлтгэл'), (13, 'Монгол хэл эсcэ бичлэг')], db_index=True, default=1, verbose_name='Шалгуур үзүүлэлт')),
                ('orderby', models.PositiveIntegerField(verbose_name='Шалгуурын эрэмбэ')),
                ('limit_min', models.FloatField(null=True, verbose_name='Насны шалгуурын доод хязгаар')),
                ('limit_mах', models.FloatField(null=True, verbose_name='Насны шалгуурын дээд хязгаар')),
            ],
        ),
        migrations.CreateModel(
            name='AdmissionLesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_code', models.CharField(max_length=20, unique=True, verbose_name='Элсэлтийн шалгалтын хичээлийн код')),
                ('lesson_name', models.CharField(max_length=100, verbose_name='Элсэлтийн шалгалтын хичээлийн нэр')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='AdmissionRegister',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Элсэлтийн нэр')),
                ('degrees', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(null=True), blank=True, null=True, size=None, verbose_name='Мэргэжлийн зэргүүдийг хадгалах')),
                ('lesson_year', models.CharField(max_length=50, verbose_name='Хичээлийн жил')),
                ('begin_date', models.DateTimeField(verbose_name='Элсэлт эхлэх хугацаа')),
                ('end_date', models.DateTimeField(verbose_name='Дуусах хугацаа')),
                ('is_active', models.BooleanField(default=False, verbose_name='Идэвхтэй эсэх')),
                ('is_store', models.BooleanField(default=False, verbose_name='Нөөцлөх эсэх')),
                ('payment', models.IntegerField(default=0, verbose_name='Элсэлтийн хураамж')),
                ('home_description', models.CharField(max_length=5000, null=True, verbose_name='Нүүр хуудасны харуулах тайлбар')),
                ('alert_description', models.CharField(max_length=5000, null=True, verbose_name='Тухайн элсэлтэд зориулаад санамж')),
                ('admission_juram', models.FileField(null=True, upload_to='admission', verbose_name='Элсэлтийн журам')),
            ],
        ),
        migrations.CreateModel(
            name='AdmissionRegisterProfession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.PositiveSmallIntegerField(choices=[(1, 'Элсэлтийн ерөнхий шалгалтын оноогоор'), (2, 'Дээд боловсролтой иргэн (2 жил)'), (3, 'Дээд боловсролтой албан хаагч)'), (4, 'Албан хаагч (бүрэн дунд боловсролтой)'), (5, 'Хамаарахгүй')], db_index=True, default=5, verbose_name='Элсэлтийн төрөл')),
                ('active', models.BooleanField(default=True, verbose_name='Идэвхтэй зарлагдах хөтөлбөр эсэх')),
            ],
        ),
        migrations.CreateModel(
            name='AdmissionXyanaltToo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('norm_all', models.PositiveIntegerField(null=True, verbose_name='Нийт хяналтын тоо')),
                ('is_gender', models.BooleanField(default=False, verbose_name='Хүйсээр ялгах эсэх')),
                ('norm1', models.PositiveIntegerField(null=True, verbose_name='Эрэгтэй суралцагчийн тоо')),
                ('norm2', models.PositiveIntegerField(null=True, verbose_name='Эмэгтэй суралцагчийн тоо')),
            ],
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500, verbose_name='Зарлал гарчиг')),
                ('body', models.TextField(null=True, verbose_name='Зарлалын бие хэсэг')),
                ('is_online', models.BooleanField(default=True, verbose_name='Online хичээлийн зарлал эсэх')),
                ('week_number', models.IntegerField(null=True, verbose_name='7 хоногийн дугаар')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='AnnouncementComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(null=True, verbose_name='Сэтгэгдэл')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Сэтгэгдэл үлдээсэн хугацаа')),
            ],
        ),
        migrations.CreateModel(
            name='AttachmentConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('row_count', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(null=True), blank=True, null=True, size=None, verbose_name='Туслах багш')),
                ('atype', models.IntegerField(choices=[(1, 'Монгол'), (2, 'Англи'), (3, 'Уйгаржин')], default=1, verbose_name='Хавсралтын төрөл')),
                ('is_lastname', models.BooleanField(default=False, verbose_name='Овог харуулах эсэх')),
                ('is_center', models.BooleanField(default=False, verbose_name='Голлуулах эсэх')),
                ('give_date', models.DateField(null=True, verbose_name='Олгосон огноо')),
            ],
        ),
        migrations.CreateModel(
            name='BiyDaalt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_created=True, verbose_name='Үүсгэсэн огноо')),
                ('guidelines', models.TextField(null=True, verbose_name='Удирдамж')),
                ('score', models.FloatField(null=True, verbose_name='Дүгнэх огноо')),
                ('file', models.FileField(null=True, upload_to='biydaalt', verbose_name='Хавсаргах файл')),
            ],
        ),
        migrations.CreateModel(
            name='BiyDaaltStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(null=True, upload_to='student_biydaalt', verbose_name='Оюутны илгээсэн файл')),
                ('status', models.IntegerField(choices=[(1, 'Илгээсэн'), (2, 'Дүгнэгдсэн')], db_index=True, default=1, null=True, verbose_name='Бие даалтын төрөл')),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='Үүсгэсэн огноо')),
            ],
        ),
        migrations.CreateModel(
            name='Building',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, verbose_name='Хичээлийн байрны код')),
                ('name', models.CharField(max_length=100, verbose_name='Хичээлийн байрна нэр')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CalculatedGpaOfDiploma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kredit', models.FloatField(verbose_name='Кредит')),
                ('score', models.FloatField(null=True, verbose_name='Нийт оноо')),
                ('gpa', models.FloatField(null=True, verbose_name='Голч дүн')),
                ('assesment', models.CharField(max_length=5, null=True, verbose_name='Үсгэн тэмдэглэгэ')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Challenge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_year', models.CharField(max_length=20, null=True, verbose_name='Хичээлийн жил')),
                ('kind', models.IntegerField(choices=[(1, 'Хичээлийн хүрээнд'), (2, 'Ангийн хүрээнд'), (3, 'Оюутны хүрээнд')], default=1)),
                ('title', models.CharField(max_length=250, verbose_name='Гарчиг')),
                ('description', models.TextField(null=True, verbose_name='Тайлбар')),
                ('question_count', models.IntegerField(null=True, verbose_name='Нийт асуултын тоо')),
                ('start_date', models.DateTimeField(verbose_name='Эхлэх хугацаа')),
                ('end_date', models.DateTimeField(verbose_name='Дуусах хугацаа')),
                ('duration', models.PositiveIntegerField(null=True, verbose_name='Үргэлжлэх хугацаа')),
                ('assess', models.IntegerField(choices=[(1, 'Хамгийн өндөр оноо'), (2, 'Дундаж оноо')], default=1, verbose_name='Үнэлэх арга')),
                ('week', models.IntegerField(null=True, verbose_name='7 хоногийн тоо')),
                ('try_number', models.IntegerField(default=1, verbose_name='Оролдлогын тоо')),
                ('send_type', models.PositiveIntegerField(choices=[(1, 'ИЛГЭЭСЭН'), (2, 'БАТАЛСАН'), (3, 'ТАТГАЛЗСАН')], db_index=True, null=True, verbose_name='Шалгалт илгээсэн төрөл')),
                ('challenge_type', models.PositiveIntegerField(choices=[(1, 'Явцын шалгалт'), (2, 'Cорил 2'), (3, 'Улирлын шалгалт'), (4, 'Өөрийгөө сорих тест'), (5, 'Төгсөлтийн шалгалт'), (6, 'Элсэлтийн шалгалт')], db_index=True, default=1, verbose_name='Шалгалтын төрөл')),
                ('comment', models.TextField(null=True, verbose_name='ХБА татгалзсан тайлбар бичих')),
                ('has_shuffle', models.BooleanField(default=False, verbose_name='Холих эсэх')),
                ('has_choice_shuffle', models.BooleanField(default=False, verbose_name='Сонголтуудыг холих эсэх')),
                ('is_repeat', models.BooleanField(default=False, verbose_name='Давтан шалгалт эсэх')),
                ('is_open', models.BooleanField(default=False, verbose_name='Нээлттэй эсэх')),
                ('level', models.IntegerField(choices=[(1, 'Түвшин-1'), (2, 'Түвшин-2'), (3, 'Түвшин-3'), (4, 'Түвшин-4'), (5, 'Түвшин-5'), (6, 'Түвшин-6')], default=2, verbose_name='Шалгалтын түвшин')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ChallengeElseltUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tried', models.BooleanField(default=False, verbose_name='Элсэгчийн оролдлогын тоо дүүрсэн эсэх')),
                ('start_time', models.DateTimeField(verbose_name='Шалгалт эхэлсэн хугацаа')),
                ('end_time', models.DateTimeField(null=True, verbose_name='Шалгалт дуусгасан хугацаа')),
                ('answer', models.TextField(null=True, verbose_name='Хариулт')),
                ('score', models.FloatField(null=True, verbose_name='Элсэгчийн авсан оноо')),
                ('take_score', models.FloatField(null=True, verbose_name='Элсэгчийн авах оноо')),
                ('old_score', models.FloatField(null=True, verbose_name='Хуучин элсэгчийн авсан оноо')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ChallengeQuestionCount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ChallengeQuestions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_year', models.CharField(default='2024-2025', max_length=1000, verbose_name='Хичээлийн жил')),
                ('kind', models.IntegerField(choices=[(1, 'Нэг сонголт'), (6, 'Богино нөхөх хариулт'), (7, 'Харгалзуулах, жиших'), (8, 'Тооцоолж бодох'), (9, 'Төсөл боловсруулах'), (10, 'Товч хариулт'), (2, 'Олон сонголт'), (3, 'Үнэн, Худлыг олох'), (5, 'Эссэ бичих'), (4, 'Үнэлгээ')], verbose_name='Асуултын төрөл')),
                ('question', models.CharField(max_length=1000, verbose_name='Асуулт')),
                ('description', models.TextField(null=True, verbose_name='Асуултын тайлбар')),
                ('is_required', models.BooleanField(default=False, verbose_name='Заавал санал өгөх эсэх')),
                ('image', models.ImageField(blank=True, null=True, upload_to=lms.models.get_image_path, verbose_name='зураг')),
                ('score', models.FloatField(null=True, verbose_name='Асуултын оноо')),
                ('yes_or_no', models.PositiveIntegerField(null=True, verbose_name='Тийм үгүй асуултны хариулт хадгалах хэсэг')),
                ('is_admission', models.BooleanField(default=False, verbose_name='Элсэлтийн асуулт эсэх')),
                ('level', models.IntegerField(choices=[(1, 'Түвшин-1'), (2, 'Түвшин-2'), (3, 'Түвшин-3'), (4, 'Түвшин-4'), (5, 'Түвшин-5'), (6, 'Түвшин-6')], default=2, verbose_name='Асуултын түвшин')),
                ('rating_max_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='Үнэлгээний дээд тоо')),
                ('low_rating_word', models.CharField(max_length=100, verbose_name='Доод үнэлгээг илэрхийлэх үг')),
                ('high_rating_word', models.CharField(max_length=100, verbose_name='Дээд үнэлгээг илэрхийлэх үг')),
                ('max_choice_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='Сонголтын хязгаар')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ChallengeSedevCount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(choices=[(1, 'Түвшин-1'), (2, 'Түвшин-2'), (3, 'Түвшин-3'), (4, 'Түвшин-4'), (5, 'Түвшин-5'), (6, 'Түвшин-6')], default=2)),
                ('count', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='ChallengeStudents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tried', models.BooleanField(default=False, verbose_name='Оюутны оролдлогын тоо дүүрсэн эсэх')),
                ('start_time', models.DateTimeField(verbose_name='Шалгалт эхэлсэн хугацаа')),
                ('end_time', models.DateTimeField(null=True, verbose_name='Шалгалт дуусгасан хугацаа')),
                ('answer', models.TextField(null=True, verbose_name='Хариулт')),
                ('score', models.FloatField(null=True, verbose_name='Оюутны авсан оноо')),
                ('take_score', models.FloatField(null=True, verbose_name='Оюутны авах оноо')),
                ('old_score', models.FloatField(null=True, verbose_name='Хуучин оюутны авсан оноо')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=lms.models.ChatMessage.user_directory_path)),
                ('message', models.CharField(max_length=255, verbose_name='чатны агуулга')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='тухайн чатыг илгээсэн огноо')),
            ],
        ),
        migrations.CreateModel(
            name='ChatRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('roomId', shortuuidfield.fields.ShortUUIDField(blank=True, editable=False, max_length=22, verbose_name='чатөрөөний id')),
                ('type', models.CharField(default='DM', max_length=10, verbose_name='өрөөний төрөл')),
                ('name', models.CharField(blank=True, max_length=20, null=True, verbose_name='Өрөөний нэр')),
            ],
        ),
        migrations.CreateModel(
            name='Club',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500, verbose_name='Клубын нэр')),
                ('type', models.PositiveIntegerField(choices=[(1, 'Сургалт'), (2, 'Спорт'), (3, 'Соёл урлаг'), (4, 'Бүтээлч урлал'), (5, 'Олон нийт')], db_index=True, default=1, verbose_name='Үйл ажиллагааны чиглэл')),
                ('purpose', models.CharField(max_length=500, null=True, verbose_name='Зорилго')),
                ('start_year', models.PositiveIntegerField(null=True, verbose_name='Байгуулагдсан он')),
                ('member_count', models.PositiveIntegerField(null=True, verbose_name='Идэвхтэй гишүүдийн тоо')),
                ('leader', models.CharField(max_length=100, verbose_name='Удирдагчийн мэдээлэл')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ClubFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=250, null=True, verbose_name='Файлын тайлбар')),
                ('file', models.ImageField(max_length=255, null=True, upload_to=lms.models.ClubFile.file_directory_path)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Complaint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_year', models.CharField(max_length=20, null=True, verbose_name='Хичээлийн жил')),
                ('complaint_type', models.PositiveIntegerField(choices=[(1, 'Жилийн чөлөөнөөс ирэх'), (2, 'Анги солих'), (3, 'Улиран суралцах'), (4, 'Төгсөх хүсэлт'), (5, 'Дүнгийн зөрчил арилгуулах'), (6, 'Бусад санал хүсэлт, гомдол')], db_index=True, default=6, verbose_name='Өргөдлийн зориулалт')),
                ('title', models.CharField(max_length=255, verbose_name='Гарчиг')),
                ('body', models.CharField(max_length=1000, null=True, verbose_name='Өргөдөл')),
                ('file', models.FileField(null=True, upload_to='', verbose_name='Хавсаргасан файл')),
                ('is_solved', models.PositiveIntegerField(choices=[(1, 'Илгээсэн'), (2, 'Цуцалсан'), (3, 'Зөвшөөрсөн'), (4, 'Татгалзсан')], db_index=True, default=1, verbose_name='Шийдвэрлэсэн эсэх')),
                ('solved_message', models.CharField(max_length=500, null=True, verbose_name='Шийдвэрийн тайлбар')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Complaint_Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit', models.PositiveIntegerField(choices=[(1, 'Сургуулийн захирал'), (2, 'Сургалт эрхэлсэн дэд захирал'), (3, 'Санхүүгийн алба'), (4, 'Бүрэлдэхүүн сургуулийн захирал'), (5, 'Журналын архив'), (6, 'Номын сан танхим 1'), (7, 'Номын сан танхим 2'), (8, 'Хөтөлбөрийн багийн ахлагч'), (9, 'Маркетингийн алба'), (10, 'Үнэлгээний мэргэжилтэн'), (11, 'Бүртгэл мэдээллийн алба'), (12, 'Зөвлөх багш'), (13, 'Сургалтын албаны дарга'), (14, 'Сургалтын менежер')], db_index=True, default=11, verbose_name='Шийдвэрлэх нэгж')),
                ('date', models.DateField(verbose_name='Хүсэлтийн огноо')),
                ('is_confirm', models.BooleanField(default=False, verbose_name='Зөвшөөрсөн эсэх')),
                ('message', models.CharField(max_length=500, null=True, verbose_name='Тайлбар')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Complaint_unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit', models.PositiveIntegerField(choices=[(1, 'Сургуулийн захирал'), (2, 'Сургалт эрхэлсэн дэд захирал'), (3, 'Санхүүгийн алба'), (4, 'Бүрэлдэхүүн сургуулийн захирал'), (5, 'Журналын архив'), (6, 'Номын сан танхим 1'), (7, 'Номын сан танхим 2'), (8, 'Хөтөлбөрийн багийн ахлагч'), (9, 'Маркетингийн алба'), (10, 'Үнэлгээний мэргэжилтэн'), (11, 'Бүртгэл мэдээллийн алба'), (12, 'Зөвлөх багш'), (13, 'Сургалтын албаны дарга'), (14, 'Сургалтын менежер')], db_index=True, default=11, verbose_name='Хүсэлтийн нэгж')),
                ('menus', models.TextField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Correspond_Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit', models.PositiveIntegerField(choices=[(1, 'Сургуулийн захирал'), (2, 'Сургалт эрхэлсэн дэд захирал'), (3, 'Санхүүгийн алба'), (4, 'Бүрэлдэхүүн сургуулийн захирал'), (5, 'Журналын архив'), (6, 'Номын сан танхим 1'), (7, 'Номын сан танхим 2'), (8, 'Хөтөлбөрийн багийн ахлагч'), (9, 'Маркетингийн алба'), (10, 'Үнэлгээний мэргэжилтэн'), (11, 'Бүртгэл мэдээллийн алба'), (12, 'Зөвлөх багш'), (13, 'Сургалтын албаны дарга'), (14, 'Сургалтын менежер')], db_index=True, default=11, verbose_name='Шийдвэрлэх нэгж')),
                ('date', models.DateField(verbose_name='Хариулсан огноо')),
                ('is_confirm', models.BooleanField(default=False, verbose_name='Зөвшөөрсөн эсэх')),
                ('message', models.CharField(max_length=500, null=True, verbose_name='Тайлбар')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='Улсын код')),
                ('name', models.CharField(max_length=100, verbose_name='Улсын нэр')),
                ('name_eng', models.CharField(max_length=500, null=True, verbose_name='Улсын нэр англи')),
                ('name_uig', models.CharField(max_length=500, null=True, verbose_name='Улсын нэр уйгаржин')),
                ('continent', models.PositiveIntegerField(choices=[(1, 'Африк'), (2, 'Хойд Америк'), (3, 'Латин Америк ба Карибын тэнгис'), (4, 'Ази'), (5, 'Европ'), (6, 'Номхон далайн орнууд')], db_index=True, default=4, verbose_name='Тивүүдийн нэр')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Crontab',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(null=True, verbose_name='Crontab нэр')),
                ('command', models.TextField(null=True, verbose_name='Ажиллуулах функц')),
                ('timing', models.TextField(null=True, verbose_name='Хугацаа')),
                ('is_active', models.BooleanField(default=False, verbose_name='Хугацаатай эсэх')),
                ('description', models.TextField(null=True, verbose_name='Тайлбар')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='DefinitionSignature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dedication_type', models.PositiveBigIntegerField(choices=[(1, 'Оюутны тодорхойлолт'), (2, 'Оюутны дүнгийн дэлгэрэнгүй'), (3, 'Оюутны голч дүн'), (4, 'Тушаал')], db_index=True, verbose_name='Зориулалт')),
                ('position_name', models.CharField(max_length=500, verbose_name='Албан тушаал')),
                ('name', models.CharField(max_length=100, verbose_name='Нэр')),
                ('order', models.IntegerField(default=0, verbose_name='Зэрэглэл')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='DiscountType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='Тэтгэлэгийн төрлийн код')),
                ('name', models.CharField(max_length=100, verbose_name='Тэтгэлэгийн төрлийн нэр')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='DormitoryBalance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_year', models.CharField(max_length=20, null=True, verbose_name='Хичээлийн жил')),
                ('balance_date', models.DateTimeField(verbose_name='Гүйлгээний огноо')),
                ('balance_amount', models.FloatField(verbose_name='Гүйлгээний дүн')),
                ('description', models.CharField(max_length=250, null=True, verbose_name='Гүйлгээний утга')),
                ('bank', models.CharField(max_length=250, null=True, verbose_name='Банкны нэр')),
                ('bank_account', models.CharField(max_length=250, null=True, verbose_name='Дансны дугаар')),
                ('bank_journal_no', models.CharField(max_length=250, null=True, verbose_name='Банкин дахь гүйлгээний дугаар')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='DormitoryBuilding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500, verbose_name='Хичээлийн байрны нэр')),
                ('eng_name', models.CharField(blank=True, max_length=500, null=True, verbose_name='Хичээлийн байрны нэр')),
                ('location', models.TextField(null=True, verbose_name='Хаяг байршил')),
                ('location_map', models.TextField(null=True, verbose_name='Газрын зураг дах байршил')),
                ('housemaster_last_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Байрны эрхлэгчийн овог')),
                ('housemaster_first_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Байрны эрхлэгчийн нэр')),
                ('housemaster_phone', models.IntegerField(null=True, verbose_name='Байрны эрхлэгчийн утасны дугаар')),
                ('image', models.ImageField(max_length=255, null=True, upload_to=lms.models.DormitoryBuilding.file_directory_path, verbose_name='Гадна зураг')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='DormitoryEstimationFamily',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveIntegerField(verbose_name='Он')),
                ('month', models.PositiveIntegerField(verbose_name='Сар')),
                ('first_uld', models.FloatField(null=True, verbose_name='Эхний үлдэгдэл')),
                ('payment', models.FloatField(null=True, verbose_name='Төлөх төлбөрийн хэмжээ')),
                ('out_payment', models.FloatField(null=True, verbose_name='Буцаах төлбөрийн хэмжээ')),
                ('ransom', models.FloatField(null=True, verbose_name='Барьцаа төлбөрийн хэмжээ')),
                ('in_balance', models.FloatField(null=True, verbose_name='Төлсөн төлбөр')),
                ('out_balance', models.FloatField(null=True, verbose_name='Буцаасан төлбөр')),
                ('lastuld', models.FloatField(null=True, verbose_name='Эцсийн үлдэгдэл')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='DormitoryFamilyContract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(null=True, verbose_name='Эхлэх хугацаа')),
                ('end_date', models.DateField(null=True, verbose_name='Дуусах хугацаа')),
                ('request', models.CharField(max_length=500, null=True, verbose_name='Байр түрээслэх хүсэлт')),
                ('request_date', models.DateTimeField(verbose_name='Бүртгүүлсэн огноо')),
                ('is_ourteacher', models.BooleanField(default=True, verbose_name='Өөрийн сургуулийн багш эсэх')),
                ('solved_flag', models.PositiveIntegerField(choices=[(1, 'Оюутан хүсэлт илгээсэн'), (2, 'Баталгаажсан'), (3, 'Буцаасан'), (4, 'Зөвшөөрсөн'), (5, 'Татгалзсан'), (6, 'Цуцалсан')], db_index=True, default=1, verbose_name='Шийдвэрийн төрөл')),
                ('solved_start_date', models.DateField(null=True, verbose_name='Эхлэх хугацаа')),
                ('solved_finish_date', models.DateField(null=True, verbose_name='Дуусах хугацаа')),
                ('solved_message', models.CharField(max_length=250, null=True, verbose_name='Шийдвэрийн тайлбар')),
                ('first_uldegdel', models.FloatField(null=True, verbose_name='Түрээслэгчийн эхний үлдэгдэл')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='DormitoryOtherBalance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_year', models.CharField(max_length=20, null=True, verbose_name='Хичээлийн жил')),
                ('balance_date', models.DateTimeField(verbose_name='Гүйлгээний огноо')),
                ('balance_amount', models.FloatField(verbose_name='Гүйлгээний дүн')),
                ('description', models.CharField(max_length=250, null=True, verbose_name='Гүйлгээний утга')),
                ('bank', models.CharField(max_length=250, null=True, verbose_name='Банкны нэр')),
                ('bank_account', models.CharField(max_length=250, null=True, verbose_name='Дансны дугаар')),
                ('bank_journal_no', models.CharField(max_length=250, null=True, verbose_name='Банкин дахь гүйлгээний дугаар')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='DormitoryOtherStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_year', models.CharField(max_length=20, verbose_name='Хичээлийн жил')),
                ('request', models.CharField(max_length=500, null=True, verbose_name='Дотуур байранд суух хүсэлт')),
                ('request_date', models.DateTimeField(verbose_name='Бүртгүүлсэн огноо')),
                ('confirm_date', models.DateTimeField(null=True, verbose_name='Баталгаажуулсан огноо')),
                ('payment', models.FloatField(null=True, verbose_name='Төлөх төлбөрийн хэмжээ')),
                ('out_payment', models.FloatField(null=True, verbose_name='Буцаах төлбөрийн хэмжээ')),
                ('ransom', models.FloatField(null=True, verbose_name='Барьцаа төлбөрийн хэмжээ')),
                ('in_balance', models.FloatField(null=True, verbose_name='Төлсөн төлбөр')),
                ('out_balance', models.FloatField(null=True, verbose_name='Буцаасан төлбөр')),
                ('solved_flag', models.PositiveIntegerField(choices=[(1, 'Оюутан хүсэлт илгээсэн'), (2, 'Баталгаажсан'), (3, 'Буцаасан'), (4, 'Зөвшөөрсөн'), (5, 'Татгалзсан'), (6, 'Цуцалсан')], db_index=True, default=1, verbose_name='Шийдвэрийн төрөл')),
                ('solved_message', models.CharField(max_length=250, null=True, verbose_name='Шийдвэрийн тайлбар')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='DormitoryPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Дотуур байрны төлбөрийн тохиргооны нэр')),
                ('is_ourstudent', models.BooleanField(default=True, verbose_name='Өөрийн сургуулийн оюутан эсэх')),
                ('payment', models.FloatField(verbose_name='Жилийн төлбөр/сарын төлбөр')),
                ('ransom', models.FloatField(null=True, verbose_name='Барьцаа төлбөр')),
                ('lesson_year', models.CharField(max_length=20, verbose_name='Хичээлийн жил')),
                ('start_date', models.DateField(null=True, verbose_name='Эхлэх огноо')),
                ('finish_date', models.DateField(null=True, verbose_name='Дуусах огноо')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='DormitoryRegistrationSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField(verbose_name='Дамжаа')),
                ('start_date', models.DateField(verbose_name='Бүртгэл эхлэх өдөр')),
                ('finish_date', models.DateField(verbose_name='Бүртгэл дуусах өдөр')),
                ('live_date', models.DateField(verbose_name='Байранд орж эхлэх өдөр')),
                ('lesson_year', models.CharField(max_length=20, null=True, verbose_name='Хичээлийн жил')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='DormitoryRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_number', models.CharField(max_length=50, verbose_name='Өрөөний дугаар')),
                ('gender', models.PositiveIntegerField(choices=[(1, 'эрэгтэй'), (2, 'эмэгтэй'), (3, 'бусад')], db_index=True, default=3, verbose_name='Хүйс')),
                ('gateway', models.CharField(max_length=50, verbose_name='Орц')),
                ('floor', models.PositiveIntegerField(verbose_name='Давхар')),
                ('door_number', models.CharField(max_length=50, null=True, verbose_name='Гадна хаалганы дугаар')),
                ('is_active', models.BooleanField(default=True, verbose_name='Идэвхтэй эсэх')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='DormitoryRoomFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=250, null=True, verbose_name='Файлын тайлбар')),
                ('file', models.ImageField(max_length=255, null=True, upload_to=lms.models.DormitoryRoomFile.file_directory_path)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='DormitoryRoomType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Өрөөний төрлийн нэр')),
                ('rent_type', models.PositiveIntegerField(choices=[(1, 'Оюутан нь хичээлийн жилээр түрээслэх'), (2, 'Айл нь сар өдрөөр түрээслэх'), (3, 'Гадаад оюутан 1 ортой'), (4, 'Гадаад оюутан 2 ортой')], db_index=True, default=1, verbose_name='Түрээслэх хэлбэр')),
                ('description', models.CharField(max_length=500, null=True, verbose_name='Өрөөний дэлгэрэнгүй тайлбар')),
                ('volume', models.PositiveIntegerField(verbose_name='Өрөөний багтаамж')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='DormitoryStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_year', models.CharField(max_length=20, verbose_name='Хичээлийн жил')),
                ('request', models.CharField(max_length=500, null=True, verbose_name='Дотуур байранд суух хүсэлт')),
                ('request_date', models.DateTimeField(verbose_name='Бүртгүүлсэн огноо')),
                ('confirm_date', models.DateTimeField(null=True, verbose_name='Баталгаажуулсан огноо')),
                ('payment', models.FloatField(null=True, verbose_name='Төлөх төлбөрийн хэмжээ')),
                ('out_payment', models.FloatField(null=True, verbose_name='Буцаах төлбөрийн хэмжээ')),
                ('ransom', models.FloatField(null=True, verbose_name='Барьцаа төлбөрийн хэмжээ')),
                ('in_balance', models.FloatField(null=True, verbose_name='Төлсөн төлбөр')),
                ('out_balance', models.FloatField(null=True, verbose_name='Буцаасан төлбөр')),
                ('solved_flag', models.PositiveIntegerField(choices=[(1, 'Оюутан хүсэлт илгээсэн'), (2, 'Баталгаажсан'), (3, 'Буцаасан'), (4, 'Зөвшөөрсөн'), (5, 'Татгалзсан'), (6, 'Цуцалсан')], db_index=True, default=1, verbose_name='Шийдвэрийн төрөл')),
                ('solved_message', models.CharField(max_length=250, null=True, verbose_name='Шийдвэрийн тайлбар')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ELearn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(null=True, verbose_name='Хичээлийн нэр гарчиг')),
                ('description', models.CharField(max_length=1000, null=True, verbose_name='Тайлбар')),
                ('image', models.FileField(null=True, upload_to='online', verbose_name='Зураг')),
                ('start_date', models.DateTimeField(null=True, verbose_name='Эхлэх хугацаа')),
                ('end_date', models.DateTimeField(null=True, verbose_name='Дуусах хугацаа')),
                ('is_end_exam', models.BooleanField(default=True, verbose_name='Төгсөлтийн шалгалттай эсэх')),
                ('is_certificate', models.BooleanField(default=False, verbose_name='Сертификаттай эсэх')),
                ('created_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ELearnProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_try_number', models.IntegerField(default=0, null=True, verbose_name='Сургалт өгсөн оролдлогийн тоо')),
                ('start_time', models.DateTimeField(verbose_name='Сургалт эхэлсэн хугацаа')),
                ('end_time', models.DateTimeField(null=True, verbose_name='Сургалт дуусгасан хугацаа')),
                ('answer', models.TextField(null=True, verbose_name='Хариулт')),
                ('score', models.FloatField(null=True, verbose_name='Оюутны авсан оноо')),
                ('take_score', models.FloatField(null=True, verbose_name='Оюутны авах оноо')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Error500',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('system_type', models.PositiveIntegerField(choices=[(1, 'Сургалтын удирдлагийн систем'), (2, 'Багшийн систем'), (3, 'Oюутны систем'), (4, 'Санхүүгийн систем'), (5, 'Хяналтын систем'), (6, 'Элсэлтийн систем'), (7, 'Номын сангийн систем')], db_index=True, verbose_name='Нэвтэрсэн системийн нэр')),
                ('url', models.CharField(db_index=True, max_length=254, verbose_name='URL')),
                ('method', models.CharField(db_index=True, max_length=20, verbose_name='Method')),
                ('description', models.TextField(null=True, verbose_name='Алдааны мэдэгдэл')),
                ('headers', models.TextField(null=True, verbose_name='Request headers')),
                ('scheme', models.TextField(null=True, verbose_name='Request scheme')),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='Хүсэлт илгээсэн огноо')),
                ('data', models.TextField(null=True, verbose_name='Request data')),
            ],
        ),
        migrations.CreateModel(
            name='Errors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('system_type', models.PositiveIntegerField(choices=[(1, 'Сургалтын удирдлагийн систем'), (2, 'Багшийн систем'), (3, 'Oюутны систем'), (4, 'Санхүүгийн систем'), (5, 'Хяналтын систем'), (6, 'Элсэлтийн систем'), (7, 'Номын сангийн систем')], db_index=True, verbose_name='Нэвтэрсэн системийн нэр')),
                ('url', models.CharField(db_index=True, max_length=254, verbose_name='URL')),
                ('method', models.CharField(db_index=True, max_length=20, verbose_name='Method')),
                ('code', models.CharField(db_index=True, max_length=50, verbose_name='Алдааны дугаар')),
                ('description', models.TextField(null=True, verbose_name='Алдааны мэдэгдэл')),
                ('headers', models.TextField(null=True, verbose_name='Request headers')),
                ('scheme', models.TextField(null=True, verbose_name='Request scheme')),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='Хүсэлт илгээсэн огноо')),
                ('data', models.TextField(null=True, verbose_name='Request data')),
            ],
        ),
        migrations.CreateModel(
            name='Exam_repeat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_year', models.CharField(max_length=10, verbose_name='Хичээлийн жил')),
                ('is_online', models.BooleanField(default=False, verbose_name='Онлайн шалгалт эсэх')),
                ('stype', models.IntegerField(choices=[(1, 'Сорил'), (2, 'Аман шалгалт'), (3, 'Дасгал')], default=1, verbose_name='Шалгалтын төрөл')),
                ('status', models.PositiveIntegerField(choices=[(1, 'Нөхөн шалгалт'), (2, 'Шууд тооцох шалгалт'), (3, 'Давтан шалгалт'), (4, 'Бусад')], db_index=True, default=4, verbose_name='Шалгалтын төлөв')),
                ('room_name', models.CharField(max_length=255, null=True, verbose_name='Анги танхимийн нэр')),
                ('begin_date', models.DateTimeField(null=True, verbose_name='Шалгалт эхлэх хугацаа')),
                ('end_date', models.DateTimeField(null=True, verbose_name='Шалгалт дуусах хугацаа')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Exam_to_group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.PositiveIntegerField(choices=[(1, 'Шалгалт өгөх'), (2, 'Шалгалтаас хасагдсан')], db_index=True, default=1, verbose_name='Шалгалтын төлөв')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Exam_to_student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.PositiveIntegerField(choices=[(1, 'Шалгалт өгөх'), (2, 'Шалгалтаас хасагдсан')], db_index=True, default=1, verbose_name='Шалгалтын төлөв')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExamTimeTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_year', models.CharField(max_length=10, verbose_name='Хичээлийн жил')),
                ('is_online', models.BooleanField(default=False, verbose_name='Онлайн шалгалт эсэх')),
                ('stype', models.IntegerField(choices=[(1, 'Сорил'), (2, 'Аман шалгалт'), (3, 'Дасгал')], default=1, verbose_name='Шалгалтын төрөл')),
                ('room_name', models.CharField(max_length=255, null=True, verbose_name='Анги танхимийн нэр')),
                ('begin_date', models.DateTimeField(null=True, verbose_name='Шалгалт эхлэх хугацаа')),
                ('end_date', models.DateTimeField(null=True, verbose_name='Шалгалт дуусах хугацаа')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='GradeLetter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('letter', models.CharField(max_length=10, verbose_name='Үсгэн тэмдэглэгээ')),
                ('description', models.TextField(verbose_name='Тайлбар')),
                ('tovch', models.CharField(max_length=500, null=True, verbose_name='Товч утга')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='GraduationWork',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diplom_qr', models.BinaryField(editable=True, null=True, verbose_name='Дипломын QR')),
                ('lesson_year', models.CharField(max_length=20, verbose_name='Хичээлийн жил')),
                ('lesson_type', models.PositiveIntegerField(choices=[(1, 'Диплом'), (2, 'Шалгалт')], db_index=True, default=1, null=True, verbose_name='Боловсролын түвшин')),
                ('diplom_topic', models.CharField(max_length=250, null=True, verbose_name='Төгсөлтийн ажлын сэдэв монгол')),
                ('diplom_topic_eng', models.CharField(max_length=250, null=True, verbose_name='Төгсөлтийн ажлын сэдэв англи')),
                ('diplom_topic_uig', models.CharField(max_length=250, null=True, verbose_name='Төгсөлтийн ажлын сэдэв уйгаржин')),
                ('leader', models.CharField(max_length=250, null=True, verbose_name='Удирдагчийн овог нэр цол')),
                ('graduation_date', models.DateField(null=True, verbose_name='Төгсөлтийн тушаалын огноо')),
                ('graduation_number', models.CharField(max_length=50, null=True, verbose_name='Төгсөлтийн тушаалын дугаар')),
                ('decision_date', models.DateField(null=True, verbose_name='Шийдвэрийн огноо')),
                ('diplom_num', models.CharField(max_length=50, null=True, verbose_name='Дипломын дугаар')),
                ('back_diplom_num', models.CharField(max_length=50, null=True, verbose_name='Бакалаврын дипломын дугаар')),
                ('registration_num', models.CharField(max_length=50, null=True, verbose_name='Бүртгэлийн дугаар')),
                ('shalgalt_onoo', models.CharField(max_length=50, null=True, verbose_name='Шалгалтын оноо')),
                ('is_check', models.BooleanField(default=False, verbose_name='Дипломын мэдээлэлтэй танилцсан эсэх')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Ангийн нэр')),
                ('level', models.IntegerField(verbose_name='Курс')),
                ('join_year', models.CharField(max_length=10, null=True, verbose_name='Элссэн хичээлийн жил')),
                ('is_finish', models.BooleanField(default=False, verbose_name='Төгссөн эсэх')),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='GymPaymentSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Сургалтын нэр')),
                ('mount_count', models.PositiveIntegerField(verbose_name='Хичээллэх сар')),
                ('week_day', models.CharField(max_length=50, verbose_name='Хичээллэх гарагууд')),
                ('accepted_count', models.PositiveIntegerField(verbose_name='Долоо хоногт хичээллэх тоо')),
                ('payment', models.FloatField(verbose_name='Төлбөрийн дүн')),
                ('is_freetime', models.BooleanField(default=False, verbose_name='Чөлөөт цагийн хуваарьтай')),
                ('start_time', models.TimeField(null=True, verbose_name='Хичээл эхлэх цаг')),
                ('finish_time', models.TimeField(null=True, verbose_name='Хичээл дуусах цаг')),
                ('description', models.CharField(max_length=500, null=True, verbose_name='Тайлбар')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Health',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1000, verbose_name='Гарчиг')),
                ('link', models.CharField(max_length=1000, null=True, verbose_name='Тайлбар')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='HealthHelp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1000, verbose_name='Гарчиг')),
                ('file', models.FileField(null=True, upload_to='healt_help', verbose_name='Файл')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='HomeWork',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_created=True, verbose_name='Үүсгэсэн огноо')),
                ('description', models.TextField(verbose_name='Тайлбар')),
                ('start_date', models.DateTimeField(null=True, verbose_name='Эхлэх хугацаа')),
                ('end_date', models.DateTimeField(null=True, verbose_name='Дуусах хугацаа')),
                ('score', models.FloatField(null=True, verbose_name='Дүгнэх огноо')),
                ('file', models.FileField(null=True, upload_to='homework', verbose_name='Гэрийн даалгаварт хавсаргах файл')),
            ],
        ),
        migrations.CreateModel(
            name='HomeWorkStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(choices=[(1, 'Илгээсэн'), (2, 'Дүгнэгдсэн')], db_index=True, default=1, null=True, verbose_name='Даалгаврын төрөл')),
                ('score', models.FloatField(null=True, verbose_name='Дүгнэгдсэн оноо')),
                ('score_comment', models.TextField(null=True, verbose_name='Дүгнэх үеинй тайлбар')),
                ('send_file', models.FileField(null=True, upload_to='homework', verbose_name='Илгээсэн файл')),
                ('description', models.TextField(null=True, verbose_name='Тайлбар')),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='Үүсгэсэн огноо')),
            ],
        ),
        migrations.CreateModel(
            name='InventionCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Нэр')),
                ('point', models.FloatField(default=0, verbose_name='Оноо')),
            ],
        ),
        migrations.CreateModel(
            name='IrtsQr',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qr_value', models.UUIDField(default=uuid.uuid4)),
                ('generate_date', models.DateTimeField(null=True)),
                ('week', models.PositiveIntegerField(null=True, verbose_name='Хэддэх долоо хоногийн QR гэдэг нь')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Learning',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('learn_code', models.IntegerField(unique=True)),
                ('learn_name', models.CharField(max_length=255, verbose_name='Суралцах хэлбэрийн нэр')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='LearningCalendar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250, verbose_name='Үйл ажиллагааны нэр')),
                ('organiser', models.CharField(max_length=250, verbose_name='Зохион байгуулагч')),
                ('action_type', models.PositiveIntegerField(choices=[(1, 'Элсэлт'), (2, 'Сургалт'), (3, 'Төгсөлт'), (4, 'Олон нийтийн ажил'), (5, 'Баяр ёслол'), (5, 'ХУРАЛ')], db_index=True, default=2, verbose_name='Үйл ажиллагааны төрөл')),
                ('scope', models.PositiveIntegerField(choices=[(1, 'Оюутан'), (2, 'Багш'), (3, 'Ажилчид'), (4, 'Бусад')], db_index=True, default=4, verbose_name='Хэн хамрагдах')),
                ('start', models.DateTimeField(verbose_name='Эхлэх хугацаа')),
                ('end', models.DateTimeField(verbose_name='Дуусах хугацаа')),
                ('color', models.CharField(blank=True, default='#3788D8', max_length=250, null=True, verbose_name='Өнгө')),
                ('description', models.CharField(max_length=250, null=True, verbose_name='Тайлбар')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='LearningPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_level', models.PositiveIntegerField(choices=[(1, 'Дээд боловсролын суурь хичээл'), (2, 'Мэргэжлийн суурь хичээл'), (3, 'Мэргэжлийн хичээл'), (5, 'Мэргэших хичээл'), (4, 'Диплом'), (11, 'Мэргэжлийн суурь хичээл'), (12, 'Мэргэжлийн хичээл'), (13, 'Туршилт, сорил, мэргэжлийн шалгалт'), (21, 'Мэргэжлийн суурь хичээл'), (22, 'Мэргэжлийн хичээл'), (23, 'Эрдэм шинжилгээ, судалгааны ажил')], db_index=True, default=1, verbose_name='Хичээлийн түвшин')),
                ('lesson_type', models.PositiveIntegerField(choices=[(1, 'Заавал үзэх'), (2, 'Сонгон судлах'), (3, 'Дадлага'), (4, 'Судалгааны аргазүй'), (5, 'Онолын суурь хичээл')], db_index=True, default=1, verbose_name='Хичээлийн төрөл')),
                ('season', models.CharField(max_length=50, null=True, verbose_name='Хичээл үзэх улирал')),
                ('is_check_score', models.BooleanField(default=False, verbose_name='74 -өөс дээш үнэлгээгээр тэнцэх эсэх')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='LeaveRequest_Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit', models.PositiveIntegerField(choices=[(1, 'Сургуулийн захирал'), (2, 'Сургалт эрхэлсэн дэд захирал'), (3, 'Санхүүгийн алба'), (4, 'Бүрэлдэхүүн сургуулийн захирал'), (5, 'Журналын архив'), (6, 'Номын сан танхим 1'), (7, 'Номын сан танхим 2'), (8, 'Хөтөлбөрийн багийн ахлагч'), (9, 'Маркетингийн алба'), (10, 'Үнэлгээний мэргэжилтэн'), (11, 'Бүртгэл мэдээллийн алба'), (12, 'Зөвлөх багш'), (13, 'Сургалтын албаны дарга'), (14, 'Сургалтын менежер')], db_index=True, default=11, verbose_name='Шийдвэрлэх нэгж')),
                ('date', models.DateField(verbose_name='Хариулсан огноо')),
                ('is_confirm', models.BooleanField(default=False, verbose_name='Зөвшөөрсөн эсэх')),
                ('message', models.CharField(max_length=500, null=True, verbose_name='Тайлбар')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Lesson_assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField(verbose_name='Оноо')),
                ('start_date', models.DateTimeField(null=True, verbose_name='Эхлэх хугацаа')),
                ('finish_date', models.DateTimeField(null=True, verbose_name='Дуусах хугацаа')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Lesson_assignment_student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.PositiveIntegerField(choices=[(1, 'Илгээсэн'), (2, 'Дүгнэгдсэн')], db_index=True, default=1, null=True, verbose_name='Даалгаврын төрөл')),
                ('description', models.TextField(null=True, verbose_name='Тайлбар')),
                ('score', models.FloatField(null=True, verbose_name='Багшийн өгсөн оноо')),
                ('score_comment', models.TextField(null=True, verbose_name='Тайлбар')),
                ('start_date', models.DateTimeField(null=True, verbose_name='Эхлэх хугацаа')),
                ('finish_date', models.DateTimeField(null=True, verbose_name='Дуусах хугацаа')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Lesson_assignment_student_file',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(max_length=255, null=True, upload_to=lms.models.Lesson_assignment_student_file.file_directory_path)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Lesson_material_file',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(max_length=255, null=True, upload_to=lms.models.Lesson_material_file.file_directory_path)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Lesson_materials',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('only_teacher', models.BooleanField(default=True, verbose_name='Зөвхөн тухайн багшийн зааж буй оюутнуудад')),
                ('week', models.PositiveIntegerField(null=True, verbose_name='Долоо хоног')),
                ('body', models.TextField(null=True, verbose_name='Мэдээний хэсэг')),
                ('material_type', models.PositiveIntegerField(choices=[(1, 'Хичээлийн лекц'), (2, 'Видео хичээл'), (3, 'Ном, сурах бичиг'), (4, 'Жишиг хичээл'), (5, 'Бие даалт'), (6, 'Ерөнхий мэдээлэл'), (7, 'Шалгалт')], db_index=True, default=1, verbose_name='Материалын төрөл')),
                ('send_type', models.PositiveIntegerField(choices=[(1, 'ИЛГЭЭСЭН'), (2, 'БАТАЛСАН'), (3, 'ТАТГАЛЗСАН')], db_index=True, null=True, verbose_name='Материалын илгээсэн төрөл')),
                ('title', models.CharField(max_length=500, null=True, verbose_name='Материалын нэр')),
                ('description', models.TextField(null=True, verbose_name='Тайлбар')),
                ('link', models.CharField(max_length=500, null=True, verbose_name='Холбоос хаяг')),
                ('comment', models.TextField(null=True, verbose_name='ХБА татгалзсан тайлбар бичих')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Lesson_teacher_scoretype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score_type', models.PositiveIntegerField(choices=[(1, 'Сорил 1'), (2, 'Сорил 2'), (3, 'Ирц'), (4, 'Бие даалт 1'), (5, 'Бие даалт 2'), (6, 'Бусад'), (7, '30 онооны шалгалт')], db_index=True, default=6, verbose_name='Дүгнэх хэлбэр')),
                ('score', models.FloatField(verbose_name='Дүгнэх хэлбэрт харгалзах багшийн оноо')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Lesson_title_plan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week', models.PositiveIntegerField(default=1, verbose_name='Долоо хоног')),
                ('lesson_type', models.PositiveIntegerField(choices=[(1, 'Лаборатор'), (2, 'Лекц'), (3, 'Семинар'), (4, 'Бусад'), (5, 'Практик'), (6, 'Бие даалт')], db_index=True, default=2, verbose_name='Хичээллэх төрөл')),
                ('title', models.CharField(max_length=500, null=True, verbose_name='Хичээлийн сэдэв')),
                ('content', models.TextField(null=True, verbose_name='Агуулга')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Lesson_to_teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(max_length=255, null=True, upload_to=lms.models.Lesson_to_teacher.file_directory_path)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='LessonCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_code', models.IntegerField(unique=True)),
                ('category_name', models.CharField(max_length=255, verbose_name='Хичээлийн ангиллын нэр')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='LessonGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_code', models.IntegerField(unique=True)),
                ('group_name', models.CharField(max_length=255, verbose_name='Хичээлийн бүлгийн нэр')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='LessonLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level_code', models.IntegerField(unique=True)),
                ('level_name', models.CharField(max_length=255, verbose_name=' Хичээлийн түвшний нэр')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='LessonMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_created=True, verbose_name='Үүсгэсэн огноо')),
                ('material_type', models.IntegerField(choices=[(1, 'Файл'), (2, 'Video хичээл'), (3, 'Зураг'), (4, 'Audio')], default=1, verbose_name='Материалын төрөл')),
                ('path', models.FileField(upload_to='efile', verbose_name='Файлуудын замыг хадгалах хэсэг')),
            ],
        ),
        migrations.CreateModel(
            name='LessonStandart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='Хичээлийн код')),
                ('name', models.CharField(max_length=500, verbose_name='Хичээлийн нэр монгол')),
                ('name_eng', models.CharField(max_length=500, null=True, verbose_name='Хичээлийн нэр англи')),
                ('name_uig', models.CharField(max_length=500, null=True, verbose_name='Хичээлийн нэр уйгаржин')),
                ('kredit', models.FloatField(verbose_name='Кредит')),
                ('is_general', models.BooleanField(default=False, verbose_name='Ерөнхий эрдэм хичээл')),
                ('definition', models.TextField(null=True, verbose_name='Хичээлийн тодорхойлолт')),
                ('purpose', models.TextField(null=True, verbose_name='Хичээлийн зорилго')),
                ('knowledge', models.TextField(null=True, verbose_name='Эзэмших мэдлэг')),
                ('skill', models.TextField(null=True, verbose_name='Эзэмших ур чадвар')),
                ('attitude', models.TextField(null=True, verbose_name='Хандлага төлөвшил')),
                ('lecture_kr', models.FloatField(null=True, verbose_name='Лекцийн кредит')),
                ('seminar_kr', models.FloatField(null=True, verbose_name='Семинарын кредит')),
                ('laborator_kr', models.FloatField(null=True, verbose_name='Лабораторын кредит')),
                ('practic_kr', models.FloatField(null=True, verbose_name='Практикийн кредит')),
                ('biedaalt_kr', models.FloatField(null=True, verbose_name='Бие даалтын кредит')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='LessonType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_code', models.IntegerField(unique=True)),
                ('type_name', models.CharField(max_length=255, verbose_name='Хичээлийн төрлийн нэр')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Library',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1000, verbose_name='Гарчиг')),
                ('file', models.FileField(null=True, upload_to='lib', verbose_name='Файл')),
                ('link', models.CharField(max_length=1000, null=True, verbose_name='Линк')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='MedalType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.BinaryField(editable=True, null=True, verbose_name='Медалын зураг')),
                ('name', models.CharField(db_index=True, max_length=500, verbose_name='Нэр')),
            ],
        ),
        migrations.CreateModel(
            name='MentalStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(null=True, verbose_name='Тайлбар')),
                ('answer', models.TextField(null=True, verbose_name='Хариулт')),
                ('score', models.FloatField(null=True, verbose_name='Элсэгчийн нийт оноо')),
                ('start_time', models.DateTimeField(null=True, verbose_name='Шалгалт өгч эхэлсэн хугацаа')),
                ('end_time', models.DateTimeField(null=True, verbose_name='Шалгалт өгч дууссан хугацаа')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='NoteCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Ангилалын нэр')),
                ('point', models.FloatField(default=0, verbose_name='Оноо')),
            ],
        ),
        migrations.CreateModel(
            name='NotificationState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='NotificationStudentState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='OnlineInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(null=True, verbose_name='Хичээлийн нэр гарчиг')),
            ],
        ),
        migrations.CreateModel(
            name='OnlineLesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_type', models.IntegerField(choices=[(1, 'Долоо хоног'), (2, 'Хугацаагаар')], default=1, verbose_name='Үүсгэх төрөл')),
                ('total_score', models.FloatField(null=True, verbose_name='Нийт үнэлэх оноо')),
                ('start_date', models.DateTimeField(null=True, verbose_name='Эхлэх хугацаа')),
                ('end_date', models.DateTimeField(null=True, verbose_name='Дуусах хугацаа')),
                ('is_end_exam', models.BooleanField(default=True, verbose_name='Төгсөлтийн шалгалттай эсэх')),
                ('is_certificate', models.BooleanField(default=False, verbose_name='Сертификаттай эсэх')),
                ('plan', models.TextField(null=True, verbose_name='Сургалтын төлөвлөгөө')),
                ('created_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OnlineSubInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500, null=True, verbose_name='Хичээлийн нэр гарчиг')),
                ('file_type', models.IntegerField(choices=[(1, 'PDF'), (2, 'Video хичээл'), (3, 'TEXT'), (5, 'Шалгалт')], default=3, verbose_name='Материалын төрөл')),
                ('text', models.TextField(null=True, verbose_name='ТEXT төрлийн мэдээлэл')),
                ('file', models.FileField(null=True, upload_to='', verbose_name='ФАЙЛ төрлийн мэдээлэл')),
            ],
        ),
        migrations.CreateModel(
            name='OnlineUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='OnlineWeek',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week_number', models.IntegerField(verbose_name='7 хоногийн дугаар')),
                ('start_date', models.DateTimeField(null=True, verbose_name='Тухайн хичээлийн эхлэх хугацаа')),
                ('end_date', models.DateTimeField(null=True, verbose_name='Тухайн хичээлийн дуусах хугацаа')),
                ('is_lock', models.BooleanField(verbose_name='Өмнөх 7 хоногийн хичээлээс хамаарах')),
                ('showed_type', models.IntegerField(choices=[(1, 'Лекц үзснээр тооцох'), (2, 'Шалгалт үзсэнээр'), (3, 'Гэрийн даалгавар, семинар ажил хийснээр')], default=2, verbose_name='Хичээл үзсэнээр тооцох төрөл')),
                ('challenge_check_score', models.FloatField(null=True, verbose_name='Шалгалтаар тооцох оноо')),
                ('description', models.CharField(max_length=1000, null=True, verbose_name='Тайлбар')),
                ('lekts_file', models.FileField(null=True, upload_to='', verbose_name='Лекцийн материал')),
                ('work_type', models.IntegerField(choices=[(1, 'Илгээсэн'), (2, 'Дүгнэгдсэн')], db_index=True, default=2, null=True, verbose_name='Даалгаврын тооцох төрөл')),
                ('created_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='OnlineWeekStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lekts_file', models.FileField(null=True, upload_to='student_lekts', verbose_name='Лекцийн материал хөтөлсөн зураг')),
                ('status', models.IntegerField(choices=[(1, 'Илгээсэн'), (2, 'Дүгнэгдсэн')], db_index=True, default=1, null=True, verbose_name='Лекцийн материал төрөл')),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='Үүсгэсэн огноо')),
            ],
        ),
        migrations.CreateModel(
            name='OtherOnlinePayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dedication', models.PositiveBigIntegerField(choices=[(1, 'Сургалтын төлбөр'), (2, 'Дотуур байрны төлбөр'), (3, 'Заалны түрээс'), (4, 'Фитнесийн төлбөр')], db_index=True, default=2, verbose_name='Төлбөрийн зориулалт')),
                ('payment', models.FloatField(verbose_name='Төлбөр')),
                ('payment_date', models.DateTimeField(verbose_name='Төлбөрийн огноо')),
                ('transaction', models.CharField(max_length=100, null=True, verbose_name='Гүйлгээний дугаар')),
                ('transaction_flag', models.PositiveIntegerField(null=True, verbose_name='Гүйлгээ амжилттай эсэх')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='OtherStudentInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school', models.CharField(max_length=500, verbose_name='Сургуулийн нэр')),
                ('profession', models.CharField(max_length=500, verbose_name='Мэргэжил')),
                ('course', models.IntegerField(default=1, verbose_name='Курс')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='OtherUserGym',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(verbose_name='Хичээллэж эхлэх огноо')),
                ('is_confirm', models.BooleanField(default=False, verbose_name='Бүртгэл баталгаажсан эсэх')),
                ('stop_date', models.DateField(null=True, verbose_name='Сургалт зогсоох огноо')),
                ('stop_duration', models.PositiveIntegerField(null=True, verbose_name='Зогсоох хугацаа өдрөөр 7 оос их')),
                ('finish_date', models.DateField(verbose_name='Хичээллэж дуусах огноо')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='OtherUserOrderGym',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.DateField(verbose_name='Өдөр')),
                ('starttime', models.TimeField(verbose_name='Эхлэх цаг')),
                ('endtime', models.TimeField(verbose_name='Дуусах цаг')),
                ('order_flag', models.PositiveIntegerField(choices=[(1, 'Захиалсан'), (2, 'Цуцалсан'), (3, 'Ирсэн')], db_index=True, default=1, verbose_name='Захиалгын төлөв')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PaperCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Нэр')),
                ('point', models.FloatField(default=0, verbose_name='Оноо')),
            ],
        ),
        migrations.CreateModel(
            name='PartTimeTeacherCreditEstimation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_year', models.CharField(max_length=20, verbose_name='Хичээлийн жил')),
                ('lesson_type', models.PositiveIntegerField(choices=[(1, 'Лаборатор'), (2, 'Лекц'), (3, 'Семинар'), (4, 'Бусад'), (5, 'Практик'), (6, 'Бие даалт')], db_index=True, default=4, verbose_name='Сургалтын хэлбэр')),
                ('teach_date', models.DateField(verbose_name='Он сар өдөр')),
                ('time', models.PositiveIntegerField(choices=[(1, '1-р пар'), (2, '2-р пар'), (3, '3-р пар'), (4, '4-р пар'), (5, '5-р пар'), (6, '6-р пар'), (7, '7-р пар'), (8, '8-р пар')], db_index=True, default=1, verbose_name='Цаг')),
                ('lesson_title', models.CharField(max_length=500, null=True, verbose_name='Хичээлийн сэдэв')),
                ('st_count', models.PositiveIntegerField(verbose_name='Оюутны тоо')),
                ('is_allowed', models.BooleanField(default=False, verbose_name='Тооцогдсон эсэх')),
                ('cause', models.CharField(max_length=500, null=True, verbose_name='Тооцоогүй тайлбар')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_amount', models.FloatField(null=True)),
                ('kind', models.PositiveIntegerField(choices=[(1, 'Монгол Банк'), (2, 'QPay')], db_index=True, null=True)),
                ('dedication', models.PositiveBigIntegerField(choices=[(1, 'Сургалтын төлбөр'), (2, 'Дотуур байрны төлбөр'), (3, 'Заалны түрээс'), (4, 'Фитнесийн төлбөр'), (5, 'Програм ашигласны төлбөр'), (6, 'Элсэлтийн хураамж')], db_index=True, default=1, verbose_name='Төлбөрийн зориулалт')),
                ('unique_id', models.CharField(max_length=300, null=True, verbose_name='qpay үүсгэхэд шаардаг unique id')),
                ('card_number', models.CharField(max_length=500, null=True)),
                ('bank_unique_number', models.CharField(max_length=300, verbose_name='payment_id буюу банкнаас төлбөр төлсөн эсэхийг илтгэх id')),
                ('mongolbank_rsp', models.TextField(null=True, verbose_name='Mongol bank response')),
                ('qpay_rsp', models.TextField(null=True, verbose_name='QPay bank response')),
                ('q_text', models.CharField(max_length=500, null=True, verbose_name='Данс болон картын гүйлгээ дэмжих QR утга')),
                ('qr_image', models.CharField(max_length=20000, null=True, verbose_name='Зурган хэлбэрээр үүсэх QR')),
                ('paid_rsp', models.TextField(null=True, verbose_name='QPay дээр төлбөр төлөгдсөн эсэхийг илтгэх')),
                ('status', models.BooleanField(default=False, verbose_name='Төлбөр төлөгдсөн эсэхийг илтгэх')),
                ('payed_date', models.DateTimeField(null=True, verbose_name='Төлсөн огноо')),
                ('description', models.CharField(max_length=500, null=True, verbose_name='Гүйлгээний утга')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'lms_payment',
            },
        ),
        migrations.CreateModel(
            name='PaymentBalance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_year', models.CharField(max_length=20, verbose_name='Хичээлийн жил')),
                ('balance_date', models.DateTimeField(verbose_name='Гүйлгээний огноо')),
                ('balance_amount', models.FloatField(verbose_name='Гүйлгээний дүн')),
                ('is_report', models.BooleanField(default=True, verbose_name='Тайлагнах эсэх')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Устгасан эсэх')),
                ('balance_desc', models.TextField(null=True, verbose_name='Гүйлгээний утга')),
                ('flag', models.PositiveIntegerField(choices=[(1, 'Төлсөн төлбөр'), (2, 'Буцаасан төлбөр')], db_index=True, default=1, verbose_name='Орлого зарлагын аль нь болох')),
                ('transaction_type', models.PositiveIntegerField(choices=[(1, 'Хаан банк'), (2, 'Төлбөрийн буцаалт'), (3, 'Гараар үүсгэсэн'), (4, 'Excel-с оруулсан'), (5, 'QPAY-с оруулсан')], db_index=True, default=1, verbose_name='Гүйлгээний төрөл')),
                ('record', models.FloatField(null=True, verbose_name='Гүйлгээний дугаар /Банкнаас өгнө хуулгаа дугаарлаж өгсөн тоо/')),
                ('transaction_date', models.DateTimeField(null=True, verbose_name='Шилжүүлэг хийсэн огноо')),
                ('post_date', models.DateTimeField(null=True, verbose_name='Гүйлгээ хийгдсэн огноо')),
                ('journal_no', models.CharField(max_length=250, null=True, verbose_name='Журналын дугаар')),
                ('related_account', models.CharField(max_length=100, null=True, verbose_name='Харьцсан дансны дугаар')),
                ('payment_type', models.PositiveBigIntegerField(choices=[(1, 'Сургалтын төлбөр'), (2, 'Хичээл нөхөлт'), (3, 'Дотуур байр'), (4, 'Элсэлтийн хураамж'), (5, 'Хичээл нөхөлт буцаалт')], null=True, verbose_name='Төлбөрийн зориулалт')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentBeginBalance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_year', models.CharField(max_length=20, verbose_name='Хичээлийн жил')),
                ('first_balance', models.FloatField(verbose_name='Эхний үлдэгдэл')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentDiscount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_year', models.CharField(max_length=20, verbose_name='Хичээлийн жил')),
                ('discount', models.FloatField(null=True, verbose_name='Хөнгөлөгдөх хувь')),
                ('state', models.PositiveIntegerField(choices=[(1, 'Хүсэлт илгээгдсэн'), (2, 'Татгалзсан'), (3, 'Зөвшөөрсөн'), (4, 'Бусад')], db_index=True, default=4, verbose_name='Шийдвэрийн төpөл')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentEstimate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_year', models.CharField(max_length=20, verbose_name='Хичээлийн жил')),
                ('kredit', models.FloatField(null=True, verbose_name='Сонгосон багц цаг')),
                ('first_balance', models.FloatField(null=True, verbose_name='Эхний үлдэгдэл')),
                ('payment', models.FloatField(null=True, verbose_name='Төлбөл зохих')),
                ('discount', models.FloatField(null=True, verbose_name='Хөнгөлөх төлбөр')),
                ('in_balance', models.FloatField(null=True, verbose_name='Төлсөн төлбөр')),
                ('out_balance', models.FloatField(null=True, verbose_name='Буцаасан төлбөр')),
                ('last_balance', models.FloatField(null=True, verbose_name=' үлдэгдэл')),
                ('reduce_payment', models.FloatField(default=0, verbose_name='Авлага бууруулах төлбөр')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentSeasonClosing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_year', models.CharField(max_length=20, verbose_name='Хичээлийн жил')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='Хаалт хийсэн огноо')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_year', models.CharField(max_length=20, verbose_name='Хичээлийн жил')),
                ('payment', models.FloatField(verbose_name='Төлбөр')),
                ('payment_type', models.PositiveIntegerField(choices=[(1, 'Багц цагийн үнэлгээ'), (2, 'Улирлын төлбөр')], db_index=True, default=2, verbose_name='Улирал багц цагийн аль нь болох')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PermissionsOtherInterval',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_year', models.CharField(max_length=20, null=True, verbose_name='Хичээлийн жил')),
                ('permission_type', models.PositiveIntegerField(choices=[(1, 'Хичээлийн хуваарийн эрх'), (2, 'Улирлын 70 оноо оруулах хугацаа'), (3, 'Улирлын 30 оноо оруулах хугацаа'), (4, 'Давтан шалгалт оноо оруулах хугацаа'), (5, 'Цахим хичээл байршуулах хугацаа'), (6, 'Их сургуулийн нэгдсэн төлөвлөлт /шар ном/-д мэдээлэл байршуулах хугацаа'), (7, 'Шинэ элсэгчдийг элсэлтийн системээс сургалтын системруу татах хугацаа'), (8, 'Шалгалтын даалгавар оруулах хугацаа'), (9, 'Шалгалтын хуваарь үүсгэх хугацаа'), (10, 'Багш багц цагт тооцох мэдээлэл оруулах хугацаа'), (10, 'Дадлагын оноо байршуулах хугацаа')], db_index=True, default=1, verbose_name='Хандах эрх')),
                ('start_date', models.DateTimeField(null=True, verbose_name='Эхлэх хугацаа')),
                ('finish_date', models.DateTimeField(null=True, verbose_name='Дуусах хугацаа')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PermissionsStudentChoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_year', models.CharField(max_length=20, null=True, verbose_name='Хичээлийн жил')),
                ('start_date', models.DateTimeField(null=True, verbose_name='Эхлэх хугацаа')),
                ('finish_date', models.DateTimeField(null=True, verbose_name='Дуусах хугацаа')),
                ('description', models.CharField(max_length=500, null=True, verbose_name='Тайлбар шалтгаан')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PermissionsTeacherScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_year', models.CharField(max_length=20, null=True, verbose_name='Хичээлийн жил')),
                ('start_date', models.DateTimeField(null=True, verbose_name='Эхлэх хугацаа')),
                ('finish_date', models.DateTimeField(null=True, verbose_name='Дуусах хугацаа')),
                ('description', models.CharField(max_length=500, null=True, verbose_name='Тайлбар шалтгаан')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Pollee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.TextField(null=True, verbose_name='Хариулт')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PrintSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deed', models.FloatField(verbose_name='дээд хэмжээ')),
                ('dood', models.FloatField(verbose_name='доод хэмжээ')),
                ('right', models.FloatField(verbose_name='баруун хэмжээ')),
                ('left', models.FloatField(verbose_name='зүүн хэмжээ')),
                ('types', models.PositiveIntegerField(choices=[(1, 'см'), (2, 'мм')], db_index=True, default=1, verbose_name='Хэвлэх төрөл')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Profession_SongonKredit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_level', models.PositiveIntegerField(choices=[(1, 'Дээд боловсролын суурь хичээл'), (2, 'Мэргэжлийн суурь хичээл'), (3, 'Мэргэжлийн хичээл'), (5, 'Мэргэших хичээл'), (4, 'Диплом'), (11, 'Мэргэжлийн суурь хичээл'), (12, 'Мэргэжлийн хичээл'), (13, 'Туршилт, сорил, мэргэжлийн шалгалт'), (21, 'Мэргэжлийн суурь хичээл'), (22, 'Мэргэжлийн хичээл'), (23, 'Эрдэм шинжилгээ, судалгааны ажил')], db_index=True, default=1, verbose_name='Хичээлийн түвшин')),
                ('songon_kredit', models.FloatField(null=True, verbose_name='Сонгон судлах кредит')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProfessionalDegree',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('degree_code', models.CharField(max_length=255, unique=True)),
                ('degree_name', models.CharField(max_length=255, verbose_name='Зэргийн нэр')),
                ('degree_eng_name', models.CharField(max_length=255, null=True, verbose_name='Зэргийн англи нэр')),
                ('degree_uig_name', models.CharField(max_length=255, null=True, verbose_name='Зэргийн уйгаржин нэр')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProfessionAverageScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_year', models.CharField(max_length=20, null=True, verbose_name='Хичээлийн жил')),
                ('level', models.IntegerField(verbose_name='Курс')),
                ('gpa_score', models.FloatField(verbose_name='Голч оноо')),
                ('gpa', models.FloatField(verbose_name='Дүн')),
                ('is_graduate', models.BooleanField(default=False, verbose_name='Төгсөж байгаа оюутнуудынх')),
                ('student_count', models.IntegerField(verbose_name='Оюутны тоо')),
            ],
        ),
        migrations.CreateModel(
            name='ProfessionDefinition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profession_code', models.CharField(max_length=3, null=True, verbose_name='Мэргэжлийн код')),
                ('code', models.CharField(max_length=50, verbose_name='Мэргэжлийн индекс')),
                ('name', models.CharField(max_length=500, verbose_name='Мэргэжлийн нэр монгол')),
                ('name_eng', models.CharField(max_length=500, null=True, verbose_name='Мэргэжлийн нэр англи')),
                ('name_uig', models.CharField(max_length=500, null=True, verbose_name='Мэргэжлийн нэр уйгаржин')),
                ('dep_name', models.CharField(max_length=500, null=True, verbose_name='Мэргэжлийн төрөлжсөн чиглэл  монгол')),
                ('dep_name_eng', models.CharField(max_length=500, null=True, verbose_name='Мэргэжлийн төрөлжсөн чиглэл англи')),
                ('dep_name_uig', models.CharField(max_length=500, null=True, verbose_name='Мэргэжлийн төрөлжсөн чиглэл уйгаржин')),
                ('dedication', models.TextField(null=True, verbose_name='Мэргэжлийн тодорхойлолт')),
                ('requirement', models.TextField(null=True, verbose_name='Мэргэжлийн зорилго')),
                ('knowledge_skill', models.TextField(null=True, verbose_name='Эзэмших мэдлэг чадвар')),
                ('confirm_year', models.IntegerField(null=True, verbose_name='Хөтөлбөр батлагдсан он')),
                ('duration', models.FloatField(null=True, verbose_name='Суралцах хугацаа')),
                ('volume_kr', models.FloatField(null=True, verbose_name='Сургалтын агуулга багтаамж/багц цаг')),
                ('introduction', models.TextField(null=True, verbose_name='Мэргэжлийн танилцуулга')),
                ('is_together', models.BooleanField(default=False, verbose_name='Хамтарсан хөтөлбөр эсэх')),
                ('poster_image', models.ImageField(null=True, upload_to='profession/', verbose_name='Танилцуулга зураг')),
                ('gen_direct_type', models.PositiveIntegerField(choices=[(1, 'Боловсрол'), (2, 'Урлаг, хүмүүнлэг'), (3, 'Нийгмийн шинжлэх ухаан, мэдээлэл, сэтгүүл зүй'), (4, 'Бизнес, удирдахуй, хууль, эрх зүй'), (5, 'Байгалийн шинжлэх ухаан, математик, статистик'), (6, 'Мэдээлэл, харилцааны технологи'), (7, 'Инженер, үйлдвэрлэл, барилга угсралт'), (8, 'Хөдөө аж ахуй, ой, загасны аж ахуй, мал эмнэлэг'), (9, 'Эрүүл мэнд, нийгмийн халамж'), (10, 'Үйлчилгээ')], db_index=True, default=1, verbose_name='Мэргэжлийн ерөнхий чиглэл')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProfessionIntroductionFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.ImageField(max_length=255, null=True, upload_to=lms.models.ProfessionIntroductionFile.file_directory_path)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Нэр')),
                ('point', models.FloatField(default=0, verbose_name='Оноо')),
            ],
        ),
        migrations.CreateModel(
            name='PsycholocalHelp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1000, verbose_name='Гарчиг')),
                ('file', models.FileField(null=True, upload_to='psy_help', verbose_name='Файл')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PsychologicalQuestionChoices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=1000, verbose_name='Сонголт')),
                ('image', models.ImageField(blank=True, null=True, upload_to=lms.models.get_choice_image_path, verbose_name='зураг')),
                ('is_correct', models.BooleanField(default=False, verbose_name='Энэ сонголт зөв эсэх')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PsychologicalQuestionTitle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True, verbose_name='Сэдвийн нэр')),
                ('created_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PsychologicalTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('participants', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(null=True), blank=True, null=True, size=None, verbose_name='Сорилд оролцогчдыг хадгална')),
                ('scope_kind', models.IntegerField(choices=[(1, 'Багш ажилчид'), (2, 'Элсэгч'), (3, 'Оюутан')], null=True)),
                ('test_type', models.IntegerField(choices=[(1, 'IQ тест'), (2, 'Сэтгэлзүйн сорил')], null=True)),
                ('title', models.CharField(max_length=250, verbose_name='Гарчиг')),
                ('description', models.TextField(null=True, verbose_name='Тайлбар')),
                ('duration', models.PositiveIntegerField(null=True, verbose_name='Үргэлжлэх хугацаа')),
                ('start_date', models.DateTimeField(verbose_name='Эхлэх хугацаа')),
                ('end_date', models.DateTimeField(verbose_name='Дуусах хугацаа')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PsychologicalTestQuestions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', models.IntegerField(choices=[(1, 'Нэг сонголт'), (2, 'Олон сонголт'), (3, 'Тийм, Үгүй сонголт'), (4, 'Үнэлгээ'), (5, 'Бичвэр')], verbose_name='Асуултын төрөл')),
                ('question_number', models.PositiveIntegerField(blank=True, null=True, verbose_name='Асуултын дугаар')),
                ('question', models.CharField(max_length=1000, verbose_name='Асуулт')),
                ('image', models.ImageField(blank=True, null=True, upload_to=lms.models.get_image_path, verbose_name='зураг')),
                ('has_score', models.BooleanField(default=False, null=True, verbose_name='Энэ асуулт оноотой юу гэдгийг шалгана')),
                ('score', models.FloatField(null=True, verbose_name='Асуултын оноо')),
                ('yes_or_no', models.PositiveIntegerField(null=True, verbose_name='Тийм үгүй асуултны хариулт хадгалах хэсэг')),
                ('rating_max_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='Үнэлгээний дээд тоо')),
                ('low_rating_word', models.CharField(max_length=100, verbose_name='Доод үнэлгээг илэрхийлэх үг')),
                ('high_rating_word', models.CharField(max_length=100, verbose_name='Дээд үнэлгээг илэрхийлэх үг')),
                ('max_choice_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='Сонголтын хязгаар')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PublishingSize',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Нэр')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionChoices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choices', models.CharField(max_length=1000, verbose_name='Сонголт')),
                ('image', models.ImageField(blank=True, null=True, upload_to=lms.models.get_choice_image_path, verbose_name='зураг')),
                ('score', models.FloatField(default=0, verbose_name='Зөв хариултын оноо')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='QuestionMainTitle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True, verbose_name='Сэдвийн нэр')),
                ('is_open', models.BooleanField(default=False, verbose_name='Нээлттэй сэдэв эсэх')),
                ('created_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='QuestionTitle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True, verbose_name='Сэдвийн нэр')),
                ('is_season', models.BooleanField(default=False, verbose_name='Улирлын шалгалтын сэдэв эсэх')),
                ('is_graduate', models.BooleanField(default=False, verbose_name='Төгсөлтийн шалгалтын сэдэв эсэх')),
                ('is_admission', models.BooleanField(default=False, verbose_name='Элсэлтийн шалгалтын сэдэв эсэх')),
                ('is_open', models.BooleanField(default=False, verbose_name='Нээлттэй сэдэв эсэх')),
                ('created_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='QuestioSubTitle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True, verbose_name='Сэдвийн нэр')),
                ('created_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='QuezChoices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choices', models.CharField(max_length=1000, verbose_name='Сонголт')),
                ('image', models.ImageField(blank=True, null=True, upload_to=lms.models.get_choice_image_path, verbose_name='зураг')),
                ('score', models.FloatField(default=0, verbose_name='Зөв хариултын оноо')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='QuezQuestions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', models.IntegerField(choices=[(1, 'Нэг сонголт'), (6, 'Богино нөхөх хариулт'), (7, 'Харгалзуулах, жиших'), (8, 'Тооцоолж бодох'), (9, 'Төсөл боловсруулах'), (10, 'Товч хариулт'), (2, 'Олон сонголт'), (3, 'Үнэн, Худлыг олох'), (5, 'Эссэ бичих'), (4, 'Үнэлгээ')], verbose_name='Асуултын төрөл')),
                ('question', models.CharField(max_length=1000, verbose_name='Асуулт')),
                ('image', models.ImageField(blank=True, null=True, upload_to=lms.models.get_image_path, verbose_name='зураг')),
                ('score', models.FloatField(null=True, verbose_name='Асуултын оноо')),
                ('yes_or_no', models.PositiveIntegerField(null=True, verbose_name='Тийм үгүй асуултны хариулт хадгалах хэсэг')),
                ('rating_max_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='Үнэлгээний дээд тоо')),
                ('low_rating_word', models.CharField(max_length=100, null=True, verbose_name='Доод үнэлгээг илэрхийлэх үг')),
                ('high_rating_word', models.CharField(max_length=100, null=True, verbose_name='Дээд үнэлгээг илэрхийлэх үг')),
                ('max_choice_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='Сонголтын хязгаар')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='QuotationCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Ангилалын нэр')),
                ('point', models.FloatField(default=0, verbose_name='Оноо')),
            ],
        ),
        migrations.CreateModel(
            name='RegisterIrts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.BigIntegerField(blank=True, choices=[(1, 'Ирсэн'), (2, 'Тас'), (3, 'Чөлөөтэй'), (4, 'Өвчтэй')], null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='RequestLogDelete',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('system_type', models.PositiveIntegerField(choices=[(1, 'Сургалтын удирдлагийн систем'), (2, 'Багшийн систем'), (3, 'Oюутны систем'), (4, 'Санхүүгийн систем'), (5, 'Хяналтын систем'), (6, 'Элсэлтийн систем'), (7, 'Номын сангийн систем')], db_index=True, verbose_name='Нэвтэрсэн системийн нэр')),
                ('url', models.CharField(db_index=True, max_length=254, verbose_name='URL')),
                ('query_string', models.TextField(null=True, verbose_name='Query string')),
                ('remote_ip', models.CharField(db_index=True, max_length=50, null=True, verbose_name='Remote IP')),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='Хүсэлт илгээсэн огноо')),
                ('status_code', models.SmallIntegerField(null=True, verbose_name='request status code')),
            ],
        ),
        migrations.CreateModel(
            name='RequestLogGet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('system_type', models.PositiveIntegerField(choices=[(1, 'Сургалтын удирдлагийн систем'), (2, 'Багшийн систем'), (3, 'Oюутны систем'), (4, 'Санхүүгийн систем'), (5, 'Хяналтын систем'), (6, 'Элсэлтийн систем'), (7, 'Номын сангийн систем')], db_index=True, verbose_name='Нэвтэрсэн системийн нэр')),
                ('url', models.CharField(db_index=True, max_length=254, verbose_name='URL')),
                ('query_string', models.TextField(null=True, verbose_name='Query string')),
                ('remote_ip', models.CharField(db_index=True, max_length=50, null=True, verbose_name='Remote IP')),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='Хүсэлт илгээсэн огноо')),
                ('status_code', models.SmallIntegerField(null=True, verbose_name='request status code')),
            ],
        ),
        migrations.CreateModel(
            name='RequestLogPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('system_type', models.PositiveIntegerField(choices=[(1, 'Сургалтын удирдлагийн систем'), (2, 'Багшийн систем'), (3, 'Oюутны систем'), (4, 'Санхүүгийн систем'), (5, 'Хяналтын систем'), (6, 'Элсэлтийн систем'), (7, 'Номын сангийн систем')], db_index=True, verbose_name='Нэвтэрсэн системийн нэр')),
                ('url', models.CharField(db_index=True, max_length=254, verbose_name='URL')),
                ('query_string', models.TextField(null=True, verbose_name='Query string')),
                ('remote_ip', models.CharField(db_index=True, max_length=50, null=True, verbose_name='Remote IP')),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='Хүсэлт илгээсэн огноо')),
                ('data', models.TextField(verbose_name='Post data буюу body')),
                ('status_code', models.SmallIntegerField(null=True, verbose_name='request status code')),
            ],
        ),
        migrations.CreateModel(
            name='RequestLogPut',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('system_type', models.PositiveIntegerField(choices=[(1, 'Сургалтын удирдлагийн систем'), (2, 'Багшийн систем'), (3, 'Oюутны систем'), (4, 'Санхүүгийн систем'), (5, 'Хяналтын систем'), (6, 'Элсэлтийн систем'), (7, 'Номын сангийн систем')], db_index=True, verbose_name='Нэвтэрсэн системийн нэр')),
                ('url', models.CharField(db_index=True, max_length=254, verbose_name='URL')),
                ('query_string', models.TextField(null=True, verbose_name='Query string')),
                ('remote_ip', models.CharField(db_index=True, max_length=50, null=True, verbose_name='Remote IP')),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='Хүсэлт илгээсэн огноо')),
                ('data', models.TextField(verbose_name='Put data буюу body')),
                ('status_code', models.SmallIntegerField(null=True, verbose_name='request status code')),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, verbose_name='Өрөөний дугаар')),
                ('name', models.CharField(max_length=100, null=True, verbose_name='Өрөөний нэр')),
                ('description', models.CharField(max_length=100, null=True, verbose_name='Тайлбар')),
                ('type', models.PositiveIntegerField(choices=[(1, 'Лаборатор'), (2, 'Лекц'), (3, 'Семинар'), (4, 'Спорт заал'), (5, 'Номын сан'), (6, 'Бялдаржуулах төв'), (7, 'Бусад')], db_index=True, default=2, null=True, verbose_name='Өрөөний төрөл')),
                ('volume', models.IntegerField(null=True, verbose_name='Өрөөний багтаамж')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='RoutingSlip_Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit', models.PositiveIntegerField(choices=[(1, 'Сургуулийн захирал'), (2, 'Сургалт эрхэлсэн дэд захирал'), (3, 'Санхүүгийн алба'), (4, 'Бүрэлдэхүүн сургуулийн захирал'), (5, 'Журналын архив'), (6, 'Номын сан танхим 1'), (7, 'Номын сан танхим 2'), (8, 'Хөтөлбөрийн багийн ахлагч'), (9, 'Маркетингийн алба'), (10, 'Үнэлгээний мэргэжилтэн'), (11, 'Бүртгэл мэдээллийн алба'), (12, 'Зөвлөх багш'), (13, 'Сургалтын албаны дарга'), (14, 'Сургалтын менежер')], db_index=True, default=11, verbose_name='Шийдвэрлэх нэгж')),
                ('date', models.DateField(verbose_name='Хариулсан огноо')),
                ('is_confirm', models.BooleanField(default=False, verbose_name='Зөвшөөрсөн эсэх')),
                ('message', models.CharField(max_length=500, null=True, verbose_name='Тайлбар')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Rule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1000, verbose_name='Гарчиг')),
                ('file', models.FileField(upload_to='rule', verbose_name='Файл')),
                ('stype', models.IntegerField(choices=[(1, 'Оюутан'), (2, 'Багш')], default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Үүсгэсэн хугацаа')),
            ],
        ),
        migrations.CreateModel(
            name='SchoolLessonLevelVolume',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_level', models.PositiveIntegerField(choices=[(1, 'Дээд боловсролын суурь хичээл'), (2, 'Мэргэжлийн суурь хичээл'), (3, 'Мэргэжлийн хичээл'), (5, 'Мэргэших хичээл'), (4, 'Диплом'), (11, 'Мэргэжлийн суурь хичээл'), (12, 'Мэргэжлийн хичээл'), (13, 'Туршилт, сорил, мэргэжлийн шалгалт'), (21, 'Мэргэжлийн суурь хичээл'), (22, 'Мэргэжлийн хичээл'), (23, 'Эрдэм шинжилгээ, судалгааны ажил')], db_index=True, default=1, verbose_name='Хичээлийн түвшин')),
                ('amount', models.PositiveIntegerField(default=40, verbose_name='Гүйцэтгэлийн кр тооцох коэфф')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score_code', models.IntegerField(unique=True)),
                ('score_max', models.FloatField(verbose_name='Дүнгийн доод оноо')),
                ('score_min', models.FloatField(verbose_name='Дүнгийн дээд оноо')),
                ('gpa', models.FloatField(verbose_name='Голч дүн')),
                ('assesment', models.CharField(max_length=10, verbose_name='Үсгэн үнэлгээ')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ScoreRegister',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_year', models.CharField(max_length=20, null=True, verbose_name='Хичээлийн жил')),
                ('teach_score', models.FloatField(null=True, verbose_name='Багшийн оноо')),
                ('exam_score', models.FloatField(null=True, verbose_name='Шалгалтын оноо')),
                ('status', models.PositiveIntegerField(choices=[(1, 'Багш оруулсан'), (2, 'Шалгалтын дүн орсон'), (3, 'Шилжиж ирсэн дүн'), (4, 'Дүйцүүлсэн дүн'), (5, 'Нөхөн шалгалтын дүн'), (6, 'Шууд тооцох шалгалтын дүн'), (7, 'Дүн ахиулах шалгалтын дүн'), (8, 'Систем ашиглаж эхлэхэд оруулсан дүн')], db_index=True, default=1, verbose_name='Дүнгийн бүртгэлийн байдал')),
                ('is_delete', models.BooleanField(default=False, verbose_name='Устгагдсан эсэх')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season_code', models.IntegerField(unique=True)),
                ('season_name', models.CharField(max_length=255, verbose_name='Улирлын нэр')),
                ('season_name_eng', models.CharField(max_length=255, null=True, verbose_name='Улирлын англи нэр')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Seminar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_created=True, verbose_name='Үүсгэсэн огноо')),
                ('description', models.TextField(verbose_name='Тайлбар')),
                ('start_date', models.DateTimeField(null=True, verbose_name='Эхлэх хугацаа')),
                ('end_date', models.DateTimeField(null=True, verbose_name='Дуусах хугацаа')),
                ('score', models.FloatField(null=True, verbose_name='Дүгнэх огноо')),
                ('file', models.FileField(null=True, upload_to='homework', verbose_name='Семинарт хавсаргах файл')),
            ],
        ),
        migrations.CreateModel(
            name='SeminarStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(choices=[(1, 'Илгээсэн'), (2, 'Дүгнэгдсэн')], db_index=True, default=1, null=True, verbose_name='Даалгаврын төрөл')),
                ('score', models.FloatField(null=True, verbose_name='Дүгнэгдсэн оноо')),
                ('score_comment', models.TextField(null=True, verbose_name='Дүгнэх үеинй тайлбар')),
                ('send_file', models.FileField(null=True, upload_to='seminar', verbose_name='Илгээсэн файл')),
                ('description', models.TextField(null=True, verbose_name='Тайлбар')),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='Үүсгэсэн огноо')),
            ],
        ),
        migrations.CreateModel(
            name='SignaturePeoples',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dedication_type', models.PositiveIntegerField(choices=[(1, 'Тодорхойлолт'), (2, 'Диплом'), (3, 'Хавсралт')], db_index=True, default=2, verbose_name='Зориулалт')),
                ('school_id', models.PositiveIntegerField(null=True, verbose_name='Сургууль')),
                ('last_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Эцэг/эхийн нэр')),
                ('first_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Өөрийн нэр')),
                ('position_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Албан тушаалын нэр')),
                ('last_name_eng', models.CharField(blank=True, max_length=200, null=True, verbose_name='Эцэг/эхийн нэр')),
                ('first_name_eng', models.CharField(blank=True, max_length=200, null=True, verbose_name='Өөрийн нэр')),
                ('position_name_eng', models.CharField(blank=True, max_length=200, null=True, verbose_name='Албан тушаалын нэр')),
                ('last_name_uig', models.CharField(blank=True, max_length=200, null=True, verbose_name='Эцэг/эхийн нэр')),
                ('first_name_uig', models.CharField(blank=True, max_length=200, null=True, verbose_name='Өөрийн нэр')),
                ('position_name_uig', models.CharField(blank=True, max_length=200, null=True, verbose_name='Албан тушаалын нэр')),
                ('is_order', models.BooleanField(default=False, verbose_name='Сортлох эсэх')),
                ('order', models.IntegerField(default=0, verbose_name='Зэрэглэл')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='SoulSurvey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_year', models.CharField(max_length=20, null=True, verbose_name='Хичээлийн жил')),
            ],
        ),
        migrations.CreateModel(
            name='Stipend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_own', models.PositiveIntegerField(choices=[(1, 'Сургуулийн дотоод тэтгэлэг'), (2, 'Гадны тэтгэлэг')], db_index=True, default=1, verbose_name='Сургуулийн дотоод тэтгэлэг эсэх')),
                ('lesson_year', models.CharField(max_length=20, verbose_name='Хичээлийн жил')),
                ('body', models.TextField(null=True, verbose_name='Тайлбар')),
                ('start_date', models.DateField(verbose_name='Бүртгэл эхлэх хугацаа')),
                ('finish_date', models.DateField(verbose_name='Бүртгэл дуусах хугацаа')),
                ('is_open', models.BooleanField(default=True, verbose_name='Нээлттэй эсэх')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StipendFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.ImageField(max_length=255, null=True, upload_to=lms.models.StipendFile.file_directory_path)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StipentStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request', models.CharField(max_length=250, null=True, verbose_name='Тэтгэлэгт хамрагдах хүсэлт')),
                ('solved_flag', models.PositiveIntegerField(choices=[(1, 'Оюутан хүсэлт илгээсэн'), (2, 'Буцаасан'), (3, 'Зөвшөөрсөн'), (4, 'Татгалзсан')], db_index=True, default=1, verbose_name='Шийдвэрийн төрөл')),
                ('solved_message', models.CharField(max_length=250, null=True, verbose_name='Шийдвэрийн тайлбар')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StipentStudentFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=250, null=True, verbose_name='Файлын тайлбар')),
                ('file', models.ImageField(max_length=255, null=True, upload_to=lms.models.StipentStudentFile.file_directory_path)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Structure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1000, verbose_name='Гарчиг')),
                ('link', models.CharField(max_length=1000, null=True, verbose_name='Линк')),
                ('file', models.FileField(null=True, upload_to='structure', verbose_name='Файл')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='Оюутны код')),
                ('family_name', models.CharField(max_length=100, null=True, verbose_name='Ургийн овог')),
                ('last_name', models.CharField(max_length=100, verbose_name='Эцэг/эхийн нэр')),
                ('first_name', models.CharField(max_length=100, verbose_name='Өөрийн нэр')),
                ('register_num', models.CharField(max_length=20, null=True, verbose_name='Регистрийн дугаар')),
                ('foregin_password', models.CharField(max_length=50, null=True, verbose_name='Гадаад пасспорт дугаар')),
                ('gender', models.PositiveIntegerField(choices=[(1, 'эрэгтэй'), (2, 'эмэгтэй'), (3, 'бусад')], db_index=True, default=3, verbose_name='Хүйс')),
                ('yas_undes', models.CharField(max_length=100, null=True, verbose_name='Яс үндэс')),
                ('birth_date', models.DateField(null=True, verbose_name='Төрсөн он сар өдөр')),
                ('phone', models.CharField(max_length=50, null=True, verbose_name='Утас')),
                ('email', models.CharField(max_length=200, null=True, verbose_name='Цахим шуудангийн хаяг')),
                ('last_name_eng', models.CharField(max_length=100, null=True, verbose_name='Эцэг эхийн англи нэр')),
                ('first_name_eng', models.CharField(max_length=100, null=True, verbose_name='Өөрийн англи нэр')),
                ('last_name_uig', models.CharField(max_length=100, null=True, verbose_name='Эцэг эхийн уйгаржин нэр')),
                ('first_name_uig', models.CharField(max_length=100, null=True, verbose_name='Өөрийн уйгаржин нэр')),
                ('admission_date', models.DateField(null=True, verbose_name='Элсэлтийн тушаалын огноо')),
                ('admission_number', models.CharField(max_length=50, null=True, verbose_name='Элсэлтийн тушаалын дугаар')),
                ('admission_before', models.CharField(max_length=100, null=True, verbose_name='Элсэхийн өмнөх байдал')),
                ('private_score', models.FloatField(default=1000, verbose_name='Хувийн оноо')),
                ('eysh_score', models.IntegerField(null=True, verbose_name='ЭЕШ-н оноо')),
                ('secondary_school', models.CharField(max_length=6, null=True, verbose_name='Өмнөх шатны боловсролын үнэлгээний оноо')),
                ('before_diplom_num', models.CharField(max_length=255, null=True, verbose_name='Өмнөх боловсролын гэрчилгээний дугаар')),
                ('diplom_num', models.CharField(max_length=255, null=True, verbose_name='Диплом дугаар')),
                ('is_active', models.BooleanField(default=True, verbose_name='Оюутны эрх нээлттэй эсэх')),
                ('qr_image', models.BinaryField(editable=True, null=True, verbose_name='Оюутны код QR')),
                ('barcode_image', models.BinaryField(editable=True, null=True, verbose_name='Оюутны barcode QR')),
                ('definition_qr', models.BinaryField(editable=True, null=True, verbose_name='Тодорхойлолтын QR')),
                ('image', models.ImageField(max_length=255, null=True, upload_to=lms.models.Student.user_directory_path)),
                ('is_mental', models.BooleanField(default=False, null=True, verbose_name='Хөгжлийн бэрхшээлтэй эсэх')),
                ('mental_type', models.PositiveIntegerField(choices=[(1, 'Харааны'), (2, 'Сонсголын'), (3, 'Ярианы'), (4, 'Хөдөлгөөний'), (5, 'Сэтгэцийн'), (6, 'Хавсарсан'), (7, 'Бусад')], db_index=True, null=True, verbose_name='Хөгжлийн бэрхшээлийн төрөл')),
                ('pay_type', models.PositiveIntegerField(choices=[(1, 'Засгийн газар хоорондын тэтгэлэг'), (2, 'Төрөөс үзүүлэх тэтгэлэг'), (3, 'Боловсролын зээлийн сангийн хөнгөлөлттэй зээл'), (4, 'Төрөөс үзүүлэх буцалтгүй тусламж'), (5, 'Дотоод, гадаадын аж ахуйн нэгж, байгууллага, сан, хүвь хүний нэрэмжит тэтгэлэг'), (6, 'Тухайн сургуулийн тэтгэлэг'), (7, 'Хувийн зардал'), (8, 'Бусад')], db_index=True, default=7, verbose_name='Төлбөр төлөлт')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('passport_toot', models.CharField(max_length=50, null=True, verbose_name='Тоот')),
                ('passport_other', models.CharField(max_length=500, null=True, verbose_name='Бусад')),
                ('lived_toot', models.CharField(max_length=50, null=True, verbose_name='Тоот')),
                ('lived_other', models.CharField(max_length=500, null=True, verbose_name='Бусад')),
            ],
        ),
        migrations.CreateModel(
            name='StudentAdmissionScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('confirmation_num', models.CharField(max_length=50, verbose_name='ЭЕШ-ын батламжийн дугаар')),
                ('score', models.FloatField(verbose_name='Оноо')),
                ('perform', models.FloatField(verbose_name='Гүйцэтгэлийн хувь')),
                ('exam_year', models.CharField(max_length=10, null=True, verbose_name='Шалгалт өгсөн он')),
                ('exam_location', models.CharField(max_length=250, null=True, verbose_name='Шалгалт өгсөн газар')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentCorrespondLessons',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('correspond_kredit', models.PositiveIntegerField(verbose_name='Дүйцүүлэх кредит')),
                ('season', models.PositiveIntegerField(db_index=True, default=1, null=True, verbose_name='Дүйцүүлэх хичээл улирал')),
                ('learn_lesson', models.CharField(max_length=200, verbose_name='Суралцсан хичээл')),
                ('learn_kredit', models.PositiveIntegerField(verbose_name='Суралцсан кредит')),
                ('score', models.FloatField(null=True, verbose_name='Дүйцүүлсэн дүн')),
                ('is_allow', models.BooleanField(default=False, verbose_name='Хичээлийг дүйцүүлэхийг зөвшөөрөх эсэх')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentCorrespondScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_year', models.CharField(max_length=20, null=True, verbose_name='Хичээлийн жил')),
                ('first_name', models.CharField(max_length=100, null=True, verbose_name='Оюутны нэр')),
                ('last_name', models.CharField(max_length=100, null=True, verbose_name='Оюутны овог')),
                ('register_num', models.CharField(max_length=50, null=True, verbose_name='Оюутны регистрийн дугаар')),
                ('correspond_type', models.PositiveIntegerField(choices=[(1, 'Өөр сургуулиас ирсэн'), (2, 'Сургууль төгсөөд ирсэн'), (3, 'Өөр мэргэжлээс ирсэн')], db_index=True, default=1, verbose_name='Дүйцүүлэлтийн төрөл')),
                ('cause', models.CharField(max_length=200, null=True, verbose_name='Тайлбар')),
                ('file', models.FileField(null=True, upload_to=lms.models.StudentCorrespondScore.file_directory_path, verbose_name='Хавсаргасан файл')),
                ('is_solved', models.PositiveIntegerField(choices=[(1, 'Илгээсэн'), (2, 'Цуцалсан'), (3, 'Зөвшөөрсөн'), (4, 'Татгалзсан')], db_index=True, default=1, verbose_name='Шийдвэрлэсэн эсэх')),
                ('solved_message', models.CharField(max_length=500, null=True, verbose_name='Удирдлагын шийдвэр')),
                ('phone', models.CharField(max_length=50, null=True, verbose_name='Оюутны утасны дугаар')),
                ('student_code', models.CharField(max_length=80, null=True, verbose_name='Хуучин оюутны код')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentDevelop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1000, verbose_name='Гарчиг')),
                ('link', models.CharField(max_length=1000, null=True, verbose_name='Линк')),
                ('file', models.FileField(null=True, upload_to='develop', verbose_name='Файл')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentEducation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school_name', models.CharField(max_length=250, null=True, verbose_name='Сургуулийн нэр')),
                ('edu_level', models.PositiveIntegerField(choices=[(1, 'СӨБ'), (2, 'Бага, суурь'), (3, 'Бүрэн дунд'), (4, 'Мэргэжлийн боловсрол'), (5, 'Дээд боловсрол')], db_index=True, default=3, null=True, verbose_name='Боловсролын түвшин')),
                ('join_year', models.CharField(max_length=10, verbose_name='Элссэн он')),
                ('graduate_year', models.CharField(max_length=10, verbose_name='Төгссөн он')),
                ('profession', models.CharField(max_length=250, null=True, verbose_name='Эзэмшсэн мэргэжил')),
                ('certificate_num', models.CharField(max_length=100, verbose_name='Диплом/Сертификатын дугаар')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentFamily',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('member', models.CharField(max_length=30, null=True, verbose_name='Оюутны хэн болох')),
                ('last_name', models.CharField(max_length=100, verbose_name='Эцэг/Эхийн нэр')),
                ('first_name', models.CharField(max_length=100, verbose_name='Өөрийн нэр')),
                ('register_num', models.CharField(max_length=20, verbose_name='Регистрийн дугаар')),
                ('employment', models.CharField(max_length=250, null=True, verbose_name='Ажил эрхлэлт')),
                ('phone', models.CharField(max_length=50, null=True, verbose_name='Утас')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentGrade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_year', models.CharField(max_length=20, null=True, verbose_name='Хичээлийн жил')),
                ('credit', models.FloatField(verbose_name='Улирлын цуглуулсан нийт кредит')),
                ('average', models.FloatField(null=True, verbose_name='Улирлын дундаж оноо')),
                ('gpa', models.FloatField(null=True, verbose_name='Улирлын голч дүн')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentGym',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(verbose_name='Хичээллэж эхлэх огноо')),
                ('is_confirm', models.BooleanField(default=False, verbose_name='Бүртгэл баталгаажсан эсэх')),
                ('stop_date', models.DateField(null=True, verbose_name='Сургалт зогсоох огноо')),
                ('stop_duration', models.PositiveIntegerField(null=True, verbose_name='Зогсоох хугацаа өдрөөр 7 оос их')),
                ('finish_date', models.DateField(verbose_name='Хичээллэж дуусах огноо')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentLeave',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_year', models.CharField(max_length=20, verbose_name='Хичээлийн жил')),
                ('learn_week', models.PositiveIntegerField(default=0, verbose_name='Хичээллэсэн 7 хоног')),
                ('description', models.CharField(max_length=250, null=True, verbose_name='Тайлбар')),
                ('statement', models.CharField(max_length=100, null=True, verbose_name='Тушаал')),
                ('statement_date', models.DateField(null=True, verbose_name='Тушаалын огноо')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentLeaveRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_year', models.CharField(max_length=20, null=True, verbose_name='Хичээлийн жил')),
                ('leave_type', models.PositiveIntegerField(choices=[(1, 'Жилийн чөлөө'), (2, 'Cарын чөлөө'), (3, 'Хоногийн чөлөө')], db_index=True, default=1, verbose_name='Чөлөөний төрөл')),
                ('start_date', models.DateField(verbose_name='Чөлөө эхлэх огноо')),
                ('count', models.PositiveIntegerField(null=True, verbose_name='Чөлөө авах хоног/сар')),
                ('cause', models.CharField(max_length=200, null=True, verbose_name='Шалтгаан')),
                ('file', models.FileField(null=True, upload_to='', verbose_name='Хавсаргасан файл')),
                ('is_solved', models.PositiveIntegerField(choices=[(1, 'Илгээсэн'), (2, 'Цуцалсан'), (3, 'Зөвшөөрсөн'), (4, 'Татгалзсан')], db_index=True, default=1, verbose_name='Шийдвэрлэсэн эсэх')),
                ('solved_message', models.CharField(max_length=500, null=True, verbose_name='Шийдвэрийн тайлбар')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentLogin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=100, verbose_name='Нэвтрэх нэр')),
                ('password', models.CharField(max_length=256, verbose_name='Нууц үг')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentMedal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medals', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(null=True), blank=True, null=True, size=None, verbose_name='Медалууд')),
                ('is_viewed', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(null=True), blank=True, null=True, size=None, verbose_name='Оюутны харсан медалын мэдээлэл')),
            ],
        ),
        migrations.CreateModel(
            name='StudentMovement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_year', models.CharField(max_length=20, verbose_name='Хичээлийн жил')),
                ('is_internal', models.BooleanField(verbose_name='Сургууль доторх шилжилт эсэх')),
                ('description', models.CharField(max_length=250, null=True, verbose_name='Тайлбар')),
                ('statement', models.CharField(max_length=100, null=True, verbose_name='Тушаал')),
                ('statement_date', models.DateField(null=True, verbose_name='Тушаалын огноо')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentNotice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Гарчиг')),
                ('body', models.TextField(verbose_name='Мэдээний хэсэг')),
                ('image', models.ImageField(blank=True, null=True, upload_to=lms.models.StudentNotice.file_directory_path, verbose_name='зураг')),
                ('scope', models.PositiveIntegerField(choices=[(1, 'Оюутан'), (2, 'Багш'), (3, 'Ажилчид'), (4, 'Бусад')], db_index=True, default=4, verbose_name='Хэн хамрагдах')),
                ('student_level', models.PositiveIntegerField(null=True, verbose_name='Оюутны курс')),
                ('is_news', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentNoticeFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.ImageField(max_length=255, null=True, upload_to=lms.models.StudentNoticeFile.file_directory_path)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentOnlinePayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dedication', models.PositiveBigIntegerField(choices=[(1, 'Сургалтын төлбөр'), (2, 'Дотуур байрны төлбөр'), (3, 'Заалны түрээс'), (4, 'Фитнесийн төлбөр')], db_index=True, default=1, verbose_name='Төлбөрийн зориулалт')),
                ('payment', models.FloatField(verbose_name='Төлбөр')),
                ('payment_date', models.DateTimeField(verbose_name='Төлбөрийн огноо')),
                ('transaction', models.CharField(max_length=100, null=True, verbose_name='Гүйлгээний дугаар')),
                ('transaction_flag', models.PositiveIntegerField(null=True, verbose_name='Гүйлгээ амжилттай эсэх')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentOrderGym',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.DateField(verbose_name='Өдөр')),
                ('starttime', models.TimeField(verbose_name='Эхлэх цаг')),
                ('endtime', models.TimeField(verbose_name='Дуусах цаг')),
                ('order_flag', models.PositiveIntegerField(choices=[(1, 'Захиалсан'), (2, 'Цуцалсан'), (3, 'Ирсэн')], db_index=True, default=1, verbose_name='Захиалгын төлөв')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentOrderHospital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.DateField(verbose_name='Өдөр')),
                ('starttime', models.TimeField(verbose_name='Эхлэх цаг')),
                ('endtime', models.TimeField(verbose_name='Дуусах цаг')),
                ('description', models.CharField(max_length=500, null=True, verbose_name='Зовиур, шалтгаан')),
                ('order_flag', models.PositiveIntegerField(choices=[(1, 'Захиалсан'), (2, 'Цуцалсан'), (3, 'Ирсэн')], db_index=True, default=1, verbose_name='Захиалгын төлөв')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentOrderLibrary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.DateField(verbose_name='Өдөр')),
                ('starttime', models.TimeField(verbose_name='Эхлэх цаг')),
                ('endtime', models.TimeField(verbose_name='Дуусах цаг')),
                ('chair_num', models.PositiveIntegerField(verbose_name='Суудлын дугаар')),
                ('description', models.CharField(max_length=500, null=True, verbose_name='Захиалгын мэдээлэл, хүсэлт')),
                ('order_flag', models.PositiveIntegerField(choices=[(1, 'Захиалсан'), (2, 'Цуцалсан'), (3, 'Ирсэн')], db_index=True, default=1, verbose_name='Захиалгын төлөв')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentOrderSport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.DateField(verbose_name='Өдөр')),
                ('starttime', models.TimeField(verbose_name='Эхлэх цаг')),
                ('endtime', models.TimeField(verbose_name='Дуусах цаг')),
                ('time_payment', models.FloatField(verbose_name='Цагийн төлбөр')),
                ('order_flag', models.PositiveIntegerField(choices=[(1, 'Захиалах боломжтой'), (2, 'Захиалсан'), (3, 'Баталгаажсан')], db_index=True, default=1, verbose_name='Захиалгын төлөв')),
                ('order_date', models.DateTimeField(null=True, verbose_name='Захиалга хийгдсэн огноо')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentPsycholocal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1000, verbose_name='Гарчиг')),
                ('link', models.CharField(max_length=1000, null=True, verbose_name='Линк')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentRegister',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.IntegerField(unique=True)),
                ('name', models.CharField(max_length=255, verbose_name='Бүртгэлийн хэлбэрийн нэр')),
                ('status_name_eng', models.CharField(max_length=255, null=True, verbose_name='Бүртгэлийн англи хэлбэрийн нэр')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentRequestClub',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(null=True, verbose_name='Дэлгэрэнгүй хүсэлт')),
                ('request_flag', models.PositiveIntegerField(choices=[(1, 'Илгээсэн'), (2, 'Цуцалсан'), (3, 'Зөвшөөрсөн'), (4, 'Татгалзсан')], db_index=True, default=1, verbose_name='Хүсэлтийн төлөв')),
                ('answer', models.CharField(max_length=500, null=True, verbose_name='Хариулт')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentRequestTutor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_year', models.CharField(max_length=20, null=True, verbose_name='Хичээлийн жил')),
                ('description', models.TextField(null=True, verbose_name='Дэлгэрэнгүй хүсэлт')),
                ('request_flag', models.PositiveIntegerField(choices=[(1, 'Илгээсэн'), (2, 'Цуцалсан'), (3, 'Зөвшөөрсөн'), (4, 'Татгалзсан')], db_index=True, default=1, verbose_name='Хүсэлтийн төлөв')),
                ('answer', models.CharField(max_length=500, null=True, verbose_name='Хариулт')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentRequestVolunteer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_year', models.CharField(max_length=20, null=True, verbose_name='Хичээлийн жил')),
                ('description', models.TextField(null=True, verbose_name='Дэлгэрэнгүй хүсэлт')),
                ('request_flag', models.PositiveIntegerField(choices=[(1, 'Илгээсэн'), (2, 'Цуцалсан'), (3, 'Зөвшөөрсөн'), (4, 'Татгалзсан')], db_index=True, default=1, verbose_name='Хүсэлтийн төлөв')),
                ('answer', models.CharField(max_length=500, null=True, verbose_name='Хариулт')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentRoutingSlip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_year', models.CharField(max_length=20, null=True, verbose_name='Хичээлийн жил')),
                ('routingslip_type', models.PositiveIntegerField(choices=[(1, 'Шилжиж явах'), (2, 'Сургуулиас гарах'), (3, 'Төгсөх')], db_index=True, default=3, verbose_name='Зориулалт')),
                ('title', models.CharField(max_length=255, verbose_name='Гарчиг')),
                ('body', models.CharField(max_length=1000, null=True, verbose_name='Хүсэлт')),
                ('file', models.FileField(null=True, upload_to='', verbose_name='Хавсаргасан файл')),
                ('is_solved', models.PositiveIntegerField(choices=[(1, 'Илгээсэн'), (2, 'Цуцалсан'), (3, 'Зөвшөөрсөн'), (4, 'Татгалзсан')], db_index=True, default=1, verbose_name='Шийдвэрлэсэн эсэх')),
                ('solved_message', models.CharField(max_length=500, null=True, verbose_name='Шийдвэрийн тайлбар')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentRules',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1000, verbose_name='Гарчиг')),
                ('file', models.FileField(null=True, upload_to='rules', verbose_name='Файл')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentTime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1000, null=True, verbose_name='Гарчиг')),
                ('file', models.FileField(null=True, upload_to='time', verbose_name='Файл')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentViz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.PositiveBigIntegerField(choices=[(1, 'Хүлээн авсан'), (2, 'Шалгаж байгаа'), (3, 'Татгалзсан'), (4, 'Зөвшөөрсөн'), (5, 'Буцаан олгосон')], db_index=True, default=1, verbose_name='Төлөв')),
                ('year', models.CharField(max_length=20, verbose_name='Идэвхтэй хичээлийн жил')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('oyutans', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(null=True), blank=True, null=True, size=None, verbose_name='Оюутнуудыг хадгална')),
                ('teachers', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(null=True), blank=True, null=True, size=None, verbose_name='Багш нарыг хадгална')),
                ('is_all', models.BooleanField(default=False, verbose_name='Бүгд')),
                ('scope_kind', models.IntegerField(choices=[(1, 'Байгууллага'), (2, 'Дэд байгууллага'), (3, 'Салбар'), (4, 'Албан тушаал'), (5, 'Алба хаагч'), (6, 'Хэрэглэгч'), (7, 'Бүгд'), (8, 'Оюутан'), (9, 'Мэргэжил'), (10, 'Курс'), (11, 'Анги')])),
                ('title', models.CharField(max_length=250, verbose_name='Гарчиг')),
                ('description', models.TextField(verbose_name='Тайлбар')),
                ('image', models.ImageField(blank=True, null=True, upload_to='survey', verbose_name='зураг')),
                ('start_date', models.DateTimeField(verbose_name='Эхлэх хугацаа')),
                ('end_date', models.DateTimeField(verbose_name='Дуусах хугацаа')),
                ('is_required', models.BooleanField(default=False, verbose_name='Заавал бөглөх эсэх')),
                ('is_hide_employees', models.BooleanField(default=False, verbose_name='Бөглөсөн албан хаагчдыг нуух эсэх')),
                ('is_soul', models.BooleanField(default=False, verbose_name='Сэтгэл ханамжийн судалгаа эсэх')),
                ('soul_type', models.PositiveIntegerField(blank=True, choices=[(1, 'Ерөнхий судалгаа'), (2, '"Багш-хичээл" судалгаа')], null=True, verbose_name='Сэтгэл ханамжийн судалгаа төрөл')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='SurveyChoices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choices', models.CharField(max_length=250, verbose_name='Сонголт')),
                ('image', models.ImageField(blank=True, null=True, upload_to=lms.models.get_choice_survey_image_path, verbose_name='зураг')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='SurveyQuestions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', models.IntegerField(choices=[(1, 'Нэг сонголт'), (2, 'Олон сонголт'), (3, 'Тийм, Үгүй сонголт'), (4, 'Үнэлгээ'), (5, 'Бичвэр')], verbose_name='Асуултын төрөл')),
                ('question', models.CharField(max_length=1000, verbose_name='Асуулт')),
                ('is_required', models.BooleanField(default=False, verbose_name='Заавал санал өгөх эсэх')),
                ('is_rate_teacher', models.BooleanField(default=False, verbose_name='Багшийн үнэлэх асуулт эсэх')),
                ('image', models.ImageField(blank=True, null=True, upload_to='survey_question', verbose_name='зураг')),
                ('rating_max_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='Үнэлгээний дээд тоо')),
                ('low_rating_word', models.CharField(max_length=100, verbose_name='Доод үнэлгээг илэрхийлэх үг')),
                ('high_rating_word', models.CharField(max_length=100, verbose_name='Дээд үнэлгээг илэрхийлэх үг')),
                ('rating_words', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, null=True, size=None, verbose_name='Үнэлгээний илэрхийлэх үг')),
                ('max_choice_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='Сонголтын хязгаар')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='SurveyQuestionTitle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True, verbose_name='Сэдвийн нэр')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='TeacherCountry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Нэр')),
            ],
        ),
        migrations.CreateModel(
            name='TeacherCreditEstimationA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_year', models.CharField(max_length=20, null=True, verbose_name='Хичээлийн жил')),
                ('lecture_kr', models.FloatField(null=True, verbose_name='Лекцийн цаг')),
                ('seminar_kr', models.FloatField(null=True, verbose_name='Семинарын цаг')),
                ('laborator_kr', models.FloatField(null=True, verbose_name='Лабораторын цаг')),
                ('practice_kr', models.FloatField(null=True, verbose_name='Практикын цаг')),
                ('biedaalt_kr', models.FloatField(null=True, verbose_name='Биедаалтын цаг')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.salbars', verbose_name='Хөтөлбөрийн баг')),
                ('lesson', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='lms.lessonstandart', verbose_name='Хичээл')),
                ('lesson_season', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.season', verbose_name='Улирал')),
                ('school', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.suborgs', verbose_name='Сургууль')),
                ('teacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='core.teachers', verbose_name='Багш')),
            ],
        ),
        migrations.CreateModel(
            name='TeacherCreditVolumePlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_year', models.CharField(max_length=20, null=True, verbose_name='Хичээлийн жил')),
                ('type', models.PositiveIntegerField(choices=[(1, 'Лаборатор'), (2, 'Лекц'), (3, 'Семинар'), (4, 'Бусад'), (5, 'Практик'), (6, 'Бие даалт')], db_index=True, default=2, verbose_name='Хичээллэх төрөл')),
                ('credit', models.PositiveIntegerField(null=True, verbose_name='Хичээлийн төрөлд хамаарах кредит цаг')),
                ('odd_even', models.PositiveIntegerField(choices=[(1, 'Сондгой'), (2, 'Тэгш'), (3, 'Дандаа')], db_index=True, default=3, verbose_name='Тэгш сондгой')),
                ('is_timetable', models.BooleanField(default=False, verbose_name='Хуваарьт бүртгэгдсэн эсэх')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.salbars', verbose_name='Хөтөлбөрийн баг')),
                ('lesson', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='lms.lessonstandart', verbose_name='Хичээл')),
                ('lesson_season', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.season', verbose_name='Улирал')),
                ('school', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.suborgs', verbose_name='Сургууль')),
                ('teacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='core.teachers', verbose_name='Багш')),
            ],
        ),
        migrations.CreateModel(
            name='TimeTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_year', models.CharField(max_length=10, verbose_name='Хичээлийн жил')),
                ('study_type', models.PositiveIntegerField(choices=[(1, 'Танхим'), (2, 'Онлайн'), (3, 'Хосолсон')], db_index=True, default=1, verbose_name='Хичээл орох хэлбэр')),
                ('st_count', models.PositiveIntegerField(null=True, verbose_name='Оюутны тоо')),
                ('day', models.PositiveIntegerField(choices=[(1, 'Даваа'), (2, 'Мягмар'), (3, 'Лхагва'), (4, 'Пүрэв'), (5, 'Баасан'), (6, 'Бямба'), (7, 'Ням')], db_index=True, default=1, verbose_name='Өдөр')),
                ('time', models.PositiveIntegerField(choices=[(1, '1-р пар'), (2, '2-р пар'), (3, '3-р пар'), (4, '4-р пар'), (5, '5-р пар'), (6, '6-р пар'), (7, '7-р пар'), (8, '8-р пар')], db_index=True, default=1, verbose_name='Цаг')),
                ('odd_even', models.PositiveIntegerField(choices=[(1, 'Сондгой'), (2, 'Тэгш'), (3, 'Дандаа')], db_index=True, default=3, verbose_name='Тэгш сондгой')),
                ('potok', models.PositiveIntegerField(default=1, verbose_name='Поток')),
                ('type', models.PositiveIntegerField(choices=[(1, 'Лаборатор'), (2, 'Лекц'), (3, 'Семинар'), (4, 'Бусад'), (5, 'Практик'), (6, 'Бие даалт')], db_index=True, default=4, verbose_name='Хичээллэх төрөл')),
                ('is_optional', models.BooleanField(default=False, verbose_name='Сонгон хичээл эсэх')),
                ('is_block', models.BooleanField(default=False, verbose_name='Блок эсэх')),
                ('begin_week', models.PositiveIntegerField(null=True, verbose_name='Эхлэх долоо хоног')),
                ('end_week', models.PositiveIntegerField(null=True, verbose_name='Дуусах долоо хоног')),
                ('is_kurats', models.BooleanField(default=False, verbose_name='Курац эсэх')),
                ('week_number', models.PositiveIntegerField(null=True, verbose_name='7 хоногийн дугаар')),
                ('begin_date', models.DateField(null=True, verbose_name='Эхлэх огноо')),
                ('end_date', models.DateField(null=True, verbose_name='Дуусах огноо')),
                ('color', models.CharField(max_length=250, null=True, verbose_name='Өнгө')),
                ('kurats_room', models.CharField(max_length=200, null=True, verbose_name='Курацийн хичээл орох байрлал')),
                ('support_teacher', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(null=True), blank=True, null=True, size=None, verbose_name='Туслах багш')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tt_cr_user', to=settings.AUTH_USER_MODEL, verbose_name='Бүртгэсэн хэрэглэгч')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.lessonstandart', verbose_name='Хичээл')),
                ('lesson_season', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.season', verbose_name='Улирал')),
                ('parent_kurats', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='lms.timetable')),
                ('room', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lms.room', verbose_name='Хичээллэх өрөө')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.suborgs', verbose_name='Сургууль')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.teachers', verbose_name='Багш')),
                ('updated_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tt_up_user', to=settings.AUTH_USER_MODEL, verbose_name='Зассан хэрэглэгч')),
            ],
        ),
        migrations.CreateModel(
            name='WeekMaterials',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_leks', models.BooleanField(default=True, verbose_name='Лекц эсэх')),
                ('description', models.TextField(verbose_name='Тайлбар')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.lessonmaterial', verbose_name='Хичээлийн материал')),
            ],
        ),
        migrations.CreateModel(
            name='UserSymbolCert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('register_number', models.CharField(max_length=200, verbose_name='Улсын бүртгэлийн дугаар')),
                ('end_date', models.DateField(verbose_name='Хүчинтэй хугацаа')),
                ('symbol_class', models.CharField(max_length=200, verbose_name='Бараа, үйлчилгээний олон улсын ангилал')),
                ('cert_copy', models.FileField(upload_to='teacher/intellectual-property/symbol', verbose_name='Гэрчилгээний хуулбар')),
                ('start_date', models.DateField(verbose_name='Гэрчилгээ олгосон оюуны өмчийн газрын даргын тушаалын огноо')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Багш')),
            ],
        ),
        migrations.CreateModel(
            name='UserRightCert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('register_number', models.CharField(max_length=200, verbose_name='Бүртгэлийн дугаар')),
                ('name', models.CharField(max_length=200, verbose_name='Бүтээлийн нэр')),
                ('create_date', models.DateField(verbose_name='Туурвисан огноо')),
                ('abstract', models.CharField(max_length=250, verbose_name='Товч тайлбар')),
                ('science_field', models.CharField(max_length=500, null=True, verbose_name='ШУ-ы салбар')),
                ('cert_copy', models.FileField(upload_to='teacher/intellectual-property/right-cert', verbose_name='Гэрчилгээний хуулбар')),
                ('start_date', models.DateField(verbose_name='Гэрчилгээ олгосон оюуны өмчийн газрын даргын тушаалын огноо')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Багш')),
            ],
        ),
        migrations.CreateModel(
            name='UserQuotation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Эшлэгдсэн бүтээлийн нэр')),
                ('doi_number', models.CharField(max_length=200, verbose_name='DOI дугаар')),
                ('quotation_number', models.PositiveBigIntegerField(verbose_name='Эшлэлийн тоо')),
                ('quotation_year', models.IntegerField(verbose_name='Эшлэлд татагдсан он')),
                ('quotation_link', models.CharField(max_length=200, verbose_name='Бүтээлийн холбоос')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.quotationcategory', verbose_name='Эшлэлйн ангилал')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Багш')),
            ],
        ),
        migrations.CreateModel(
            name='UserProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Төслийн нэр')),
                ('contract_number', models.CharField(max_length=200, verbose_name='Гэрээний дугаар')),
                ('finance_amount', models.PositiveBigIntegerField(verbose_name='Нийт санхүүжилтийн хэмжээ')),
                ('start_date', models.DateField(verbose_name='Эхлэх хугацаа')),
                ('end_date', models.DateField(verbose_name='Дуусах хугацаа')),
                ('contract', models.FileField(upload_to='teacher/project/contract', verbose_name='Төслийн гэрээ')),
                ('leader_name', models.CharField(max_length=200, verbose_name='Төслийн удирдагч')),
                ('leader_percent', models.IntegerField(verbose_name='Удирдагчийн төслийн оролцоонд эзлэх хувь')),
                ('leader_profession', models.CharField(max_length=200, verbose_name='Удирдагчийн мэргэжил')),
                ('science_field', models.CharField(max_length=500, null=True, verbose_name='ШУ-ы салбар')),
                ('client_name', models.CharField(max_length=200, verbose_name='Захиалагчийн нэр')),
                ('finance_name', models.CharField(max_length=200, verbose_name='Санхүүжүүлэгчийн нэр')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.projectcategory', verbose_name='Төслийн ангилал')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.suborgs', verbose_name='Төсөл хэрэгжүүлэгч сургууль')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Багш')),
            ],
        ),
        migrations.CreateModel(
            name='UserPatent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Шинэ бүтээлийн нэр')),
                ('register_number', models.CharField(max_length=200, verbose_name='Улсын бүртгэлийн дугаар')),
                ('end_date', models.DateField(verbose_name='Хүчинтэй хугацаа')),
                ('abstract', models.CharField(max_length=250, verbose_name='Товч тайлбар')),
                ('market_usage', models.CharField(max_length=250, verbose_name='Зах зээлийн хэрэглээ')),
                ('science_field', models.CharField(max_length=500, null=True, verbose_name='ШУ-ы салбар')),
                ('patent_copy', models.FileField(upload_to='teacher/intellectual-property/patent', verbose_name='Патентийн хуулбар')),
                ('start_date', models.DateField(verbose_name='Патент олгосон оюуны өмчийн газрын даргын тушаалын огноо')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Багш')),
            ],
        ),
        migrations.CreateModel(
            name='UserPaper',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('papertype', models.PositiveSmallIntegerField(choices=[(1, 'Гадаад'), (2, 'Дотоод')], verbose_name='Өгүүллийн төрөл')),
                ('magname', models.CharField(max_length=100, verbose_name='Сэтгүүлийн нэр')),
                ('published_org', models.CharField(max_length=100, verbose_name='Эрхлэн гаргагч байгууллага')),
                ('doi_number', models.CharField(max_length=100, verbose_name='DOI дугаар')),
                ('issn_number', models.CharField(max_length=100, verbose_name='ISSN дугаар')),
                ('published_year', models.IntegerField(verbose_name='Хэвлэгдсэн он')),
                ('impact_factor', models.DecimalField(decimal_places=4, max_digits=5, verbose_name='Impact Factor')),
                ('cite_score', models.DecimalField(decimal_places=4, max_digits=5, verbose_name='Cite Score')),
                ('name', models.CharField(max_length=100, verbose_name='Өгүүлэл/Илтгэлийн нэр')),
                ('paper_abstract', models.CharField(max_length=1000, verbose_name='Хураангуй')),
                ('abstract_pdf', models.FileField(blank=True, max_length=255, null=True, upload_to='teacher/paper/abstract', verbose_name='Нийтлэгдсэн өгүүлэл')),
                ('paper_link', models.CharField(max_length=100, verbose_name='Өгүүллийн холбоос')),
                ('picture', models.ImageField(blank=True, max_length=255, null=True, upload_to='teacher/invention', verbose_name='Сэтгүүлийн нүүр')),
                ('mag_link', models.CharField(default='', max_length=100, verbose_name='Сэтгүүлийн холбоос')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.papercategory', verbose_name='Өгүүлэл/Илтгэлийн ангилал')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Багш')),
            ],
        ),
        migrations.CreateModel(
            name='UserNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meeting_name', models.CharField(max_length=200, verbose_name='Хурлын нэр')),
                ('meeting_date', models.DateField(verbose_name='Хурлын огноо')),
                ('country_number', models.PositiveBigIntegerField(verbose_name='Хуралд оролцсон улсын тоо')),
                ('meeting_org_name', models.CharField(max_length=200, verbose_name='Хурал зохион байгуулсан байгууллагын нэр')),
                ('meeting_link', models.CharField(max_length=200, verbose_name='Хурлын холбоос')),
                ('abstract', models.CharField(max_length=1000, verbose_name='Хураангуй')),
                ('abstract_pdf', models.FileField(blank=True, max_length=255, null=True, upload_to='teacher/note/abstract', verbose_name='Нийтлэгдсэн илтгэл')),
                ('agenda', models.ImageField(blank=True, max_length=255, null=True, upload_to='teacher/note/agenda', verbose_name='Хурлын хөтөлбөр')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.notecategory', verbose_name='Хурлын ангилал')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.teachercountry', verbose_name='Хурал зохион байгуулагдсан улс')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Багш')),
            ],
        ),
        migrations.CreateModel(
            name='UserModelCertPatent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Ашигтай загварын нэр')),
                ('register_number', models.CharField(max_length=200, verbose_name='Улсын бүртгэлийн дугаар')),
                ('end_date', models.DateField(verbose_name='Хүчинтэй хугацаа')),
                ('abstract', models.CharField(max_length=250, verbose_name='Товч тайлбар')),
                ('market_usage', models.CharField(max_length=250, verbose_name='Зах зээлийн хэрэглээ')),
                ('science_field', models.CharField(max_length=500, null=True, verbose_name='ШУ-ы салбар')),
                ('patent_copy', models.FileField(upload_to='teacher/intellectual-property/patent', verbose_name='Патентийн хуулбар')),
                ('start_date', models.DateField(verbose_name='Патент олгосон оюуны өмчийн газрын даргын тушаалын огноо')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Багш')),
            ],
        ),
        migrations.CreateModel(
            name='UserLicenseCert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('given_name', models.CharField(max_length=200, verbose_name='Лиценз өгөгч талын нэр')),
                ('taken_name', models.CharField(max_length=200, verbose_name='Лиценз авагч талын нэр')),
                ('license_class', models.CharField(choices=[('Онцгой', 'Онцгой'), ('Онцгой бус', 'Онцгой бус')], max_length=200, verbose_name='Лицензийн ангилал')),
                ('register_number', models.CharField(max_length=200, verbose_name='Оюуны өмчийн улсын бүртгэлийн дугаар')),
                ('end_date', models.DateField(verbose_name='Лицензийн хугацаа')),
                ('start_date', models.DateField(verbose_name='Бүртгэгдсэн огноо')),
                ('abstract', models.CharField(max_length=250, verbose_name='Товч мэдээлэл')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Багш')),
            ],
        ),
        migrations.CreateModel(
            name='UserInvention',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pages_number', models.IntegerField(verbose_name='Номын хуудасны тоо')),
                ('isbn', models.CharField(max_length=100, verbose_name='ISBN дугаар')),
                ('published_year', models.IntegerField(verbose_name='Хэвлэгдсэн он')),
                ('name', models.CharField(max_length=100, verbose_name='Бүтээлийн нэр')),
                ('summary', models.CharField(max_length=500, verbose_name='Товч танилцуулга')),
                ('picture', models.ImageField(blank=True, max_length=255, null=True, upload_to='teacher/invention', verbose_name='Хавтасны зураг/Дипломын зураг оруулна уу')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.inventioncategory', verbose_name='Бүтээлийн ангилал')),
                ('publishing_size', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.publishingsize', verbose_name='Хэвлэлийн хэмжээ')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Багш')),
            ],
        ),
        migrations.CreateModel(
            name='UserContractWork',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Гэрээт ажлын нэр')),
                ('contract_number', models.CharField(max_length=200, verbose_name='Гэрээний дугаар')),
                ('contract_amount', models.PositiveBigIntegerField(verbose_name='Гэрээний дүн /төг/')),
                ('start_date', models.DateField(verbose_name='Эхлэх хугацаа')),
                ('end_date', models.DateField(verbose_name='Дуусах хугацаа')),
                ('contract', models.FileField(upload_to='teacher/project/contract', verbose_name='Төслийн гэрээ')),
                ('leader_name', models.CharField(max_length=200, verbose_name='Гэрээт ажлын удирдагч')),
                ('leader_profession', models.CharField(max_length=200, verbose_name='Удирдагчийн мэргэжил')),
                ('leader_percent', models.IntegerField(verbose_name='Удирдагчийн оролцооны хувь')),
                ('client_name', models.CharField(max_length=200, verbose_name='Захиалагчийн нэр')),
                ('finance_name', models.CharField(max_length=200, verbose_name='Санхүүжүүлэгчийн нэр')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.suborgs', verbose_name='Хэрэгжүүлэгч сургууль')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Багш')),
            ],
        ),
        migrations.CreateModel(
            name='TimeTable_to_student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('add_flag', models.BooleanField(default=True, verbose_name='Нэмэх эсэх')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.student', verbose_name='Оюутан')),
                ('timetable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.timetable', verbose_name='Хичээлийн хуваарь')),
            ],
        ),
        migrations.CreateModel(
            name='TimeTable_to_group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_online', models.BooleanField(default=False, verbose_name='Онлайнаар хичээл үзэх анги')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.group', verbose_name='Анги')),
                ('timetable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.timetable', verbose_name='Хичээлийн хуваарь')),
            ],
        ),
        migrations.CreateModel(
            name='TimeEstimateSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.PositiveIntegerField(choices=[(1, 'Танхимийн бус кредитийн коэффициент'), (2, 'Багшийн зэрэглэлийн кредит норм ')], verbose_name='Тохиргооны төрөл')),
                ('name', models.CharField(max_length=500, null=True, verbose_name='Нэр')),
                ('ratio', models.FloatField(verbose_name='коэффициент')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('position', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.orgposition', verbose_name='Албан тушаал')),
            ],
        ),
        migrations.CreateModel(
            name='TeacherScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_year', models.CharField(max_length=20, verbose_name='Хичээлийн жил')),
                ('score', models.FloatField(verbose_name='Багшийн дүн')),
                ('is_approved', models.BooleanField(default=False, verbose_name='Баталгаажсан эсэх')),
                ('approved_date', models.DateTimeField(blank=True, null=True, verbose_name='Баталгаажсан огноо')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_cr_user', to=settings.AUTH_USER_MODEL, verbose_name='Бүртгэсэн хэрэглэгч')),
                ('grade_letter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.gradeletter', verbose_name='Үсгэн үнэлгээ')),
                ('lesson_season', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.season', verbose_name='Улирал')),
                ('score_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.lesson_teacher_scoretype')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.student', verbose_name='Оюутан')),
                ('updated_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_up_user', to=settings.AUTH_USER_MODEL, verbose_name='Зассан хэрэглэгч')),
            ],
        ),
        migrations.CreateModel(
            name='TeacherCreditVolumePlan_group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('st_count', models.PositiveIntegerField(null=True, verbose_name='Оюутны тоо')),
                ('lesson_level', models.PositiveIntegerField(choices=[(1, 'Дээд боловсролын суурь хичээл'), (2, 'Мэргэжлийн суурь хичээл'), (3, 'Мэргэжлийн хичээл'), (5, 'Мэргэших хичээл'), (4, 'Диплом'), (11, 'Мэргэжлийн суурь хичээл'), (12, 'Мэргэжлийн хичээл'), (13, 'Туршилт, сорил, мэргэжлийн шалгалт'), (21, 'Мэргэжлийн суурь хичээл'), (22, 'Мэргэжлийн хичээл'), (23, 'Эрдэм шинжилгээ, судалгааны ажил')], db_index=True, default=1, verbose_name='Хичээлийн түвшин')),
                ('exec_credit_flag', models.PositiveIntegerField(null=True, verbose_name='Гүйцэтгэлийн кр тооцох коэффициент')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('creditvolume', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='lms.teachercreditvolumeplan', verbose_name='Багшийн заах хичээлийн бүртгэл')),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.group', verbose_name='Суралцах ангийн бүртгэл')),
            ],
        ),
        migrations.CreateModel(
            name='TeacherCreditNotChamberEstimationA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(verbose_name='Тоо хэмжээ')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('time_estimate_settings', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.timeestimatesettings', verbose_name='Цагийн ачааллын тохиргоо')),
                ('timeestimatea', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.teachercreditestimationa', verbose_name='А цагийн танхим')),
            ],
        ),
        migrations.CreateModel(
            name='TeacherCreditEstimationA_group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('st_count', models.PositiveIntegerField(null=True, verbose_name='Оюутны тоо')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('creditestimation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='lms.teachercreditestimationa', verbose_name='Багшийн заах хичээлийн бүртгэл')),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.group', verbose_name='Суралцах ангийн бүртгэл')),
            ],
        ),
        migrations.CreateModel(
            name='SystemSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active_lesson_year', models.CharField(max_length=20, verbose_name='Идэвхтэй хичээлийн жил')),
                ('prev_lesson_year', models.CharField(max_length=20, verbose_name='Өмнөх хичээлийн жил')),
                ('start_date', models.DateField(verbose_name='Эхлэх хугацаа')),
                ('finish_date', models.DateField(verbose_name='Дуусах хугацаа')),
                ('season_type', models.PositiveIntegerField(choices=[(1, 'Идэвхитэй'), (2, 'Идэвхигүй'), (3, 'Хаагдсан')], db_index=True, default=2, verbose_name='Улирлын төлөв')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('active_lesson_season', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='active', to='lms.season', verbose_name='Идэвхтэй улирал')),
                ('created_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='setting_cr_user', to=settings.AUTH_USER_MODEL, verbose_name='Бүртгэсэн хэрэглэгч')),
                ('prev_lesson_season', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='previous', to='lms.season', verbose_name='Өмнөх улирал')),
                ('updated_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='setting_up_user', to=settings.AUTH_USER_MODEL, verbose_name='Зассан хэрэглэгч')),
            ],
        ),
        migrations.AddConstraint(
            model_name='surveyquestiontitle',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('name'), name='unique_name_ci'),
        ),
        migrations.AddField(
            model_name='surveyquestions',
            name='choices',
            field=models.ManyToManyField(to='lms.surveychoices'),
        ),
        migrations.AddField(
            model_name='surveyquestions',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.employee'),
        ),
        migrations.AddField(
            model_name='surveyquestions',
            name='title',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.surveyquestiontitle', verbose_name='Асуултын ерөнхий сэдэв'),
        ),
        migrations.AddField(
            model_name='survey',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.employee'),
        ),
        migrations.AddField(
            model_name='survey',
            name='created_department',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.salbars', verbose_name='Салбар'),
        ),
        migrations.AddField(
            model_name='survey',
            name='created_school',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.suborgs', verbose_name='Харьяалагдах алба нэгж'),
        ),
        migrations.AddField(
            model_name='survey',
            name='deleted_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='deleted', to='core.employee'),
        ),
        migrations.AddField(
            model_name='survey',
            name='questions',
            field=models.ManyToManyField(to='lms.surveyquestions'),
        ),
        migrations.AddField(
            model_name='studentviz',
            name='student',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.student', verbose_name='Оюутан'),
        ),
        migrations.AddField(
            model_name='studenttime',
            name='created_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='time_user', to=settings.AUTH_USER_MODEL, verbose_name='Үүсгэсэн хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='studenttime',
            name='updated_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Зассан хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='studentrules',
            name='created_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lib_user', to=settings.AUTH_USER_MODEL, verbose_name='Үүсгэсэн хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='studentrules',
            name='updated_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Зассан хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='studentroutingslip',
            name='lesson_season',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.season', verbose_name='Улирал'),
        ),
        migrations.AddField(
            model_name='studentroutingslip',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.student', verbose_name='Оюутан'),
        ),
        migrations.AddField(
            model_name='studentrequestvolunteer',
            name='action',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.learningcalendar', verbose_name='Олон нийтийн ажил'),
        ),
        migrations.AddField(
            model_name='studentrequestvolunteer',
            name='lesson_season',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.season', verbose_name='Улирал'),
        ),
        migrations.AddField(
            model_name='studentrequestvolunteer',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.student', verbose_name='Оюутан'),
        ),
        migrations.AddField(
            model_name='studentrequesttutor',
            name='lesson',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.lessonstandart', verbose_name='Заах хичээл'),
        ),
        migrations.AddField(
            model_name='studentrequesttutor',
            name='lesson_season',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.season', verbose_name='Улирал'),
        ),
        migrations.AddField(
            model_name='studentrequesttutor',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.student', verbose_name='Оюутан'),
        ),
        migrations.AddField(
            model_name='studentrequesttutor',
            name='teacher',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.teachers', verbose_name='Дагалдах багш'),
        ),
        migrations.AddField(
            model_name='studentrequestclub',
            name='club',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.club', verbose_name='Клуб'),
        ),
        migrations.AddField(
            model_name='studentrequestclub',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.student', verbose_name='Оюутан'),
        ),
        migrations.AddField(
            model_name='studentpsycholocal',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='p_cr_user', to=settings.AUTH_USER_MODEL, verbose_name='Үүсгэсэн хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='studentpsycholocal',
            name='updated_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Зассан хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='studentordersport',
            name='payment',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.payment', verbose_name='Оюутны төлбөр төлөгдсөн мэдээлэл'),
        ),
        migrations.AddField(
            model_name='studentordersport',
            name='room',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.room', verbose_name='Байрлал'),
        ),
        migrations.AddField(
            model_name='studentordersport',
            name='student',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.student', verbose_name='Оюутан'),
        ),
        migrations.AddField(
            model_name='studentordersport',
            name='teachers',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.teachers', verbose_name='Бусад'),
        ),
        migrations.AddField(
            model_name='studentorderlibrary',
            name='room',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.room', verbose_name='Байрлал'),
        ),
        migrations.AddField(
            model_name='studentorderlibrary',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.student', verbose_name='Оюутан'),
        ),
        migrations.AddField(
            model_name='studentorderhospital',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.student', verbose_name='Оюутан'),
        ),
        migrations.AddField(
            model_name='studentordergym',
            name='gym_payment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.gympaymentsettings', verbose_name='Сонгосон сургалт'),
        ),
        migrations.AddField(
            model_name='studentordergym',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.student', verbose_name='Оюутан'),
        ),
        migrations.AddField(
            model_name='studentonlinepayment',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.student', verbose_name='Оюутан'),
        ),
        migrations.AddField(
            model_name='studentnoticefile',
            name='notice',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.studentnotice', verbose_name='Зар мэдээ'),
        ),
        migrations.AddField(
            model_name='studentnotice',
            name='created_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='news_cr_user', to=settings.AUTH_USER_MODEL, verbose_name='Бүртгэсэн хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='studentnotice',
            name='department',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.salbars', verbose_name='Хөтөлбөрийн баг'),
        ),
        migrations.AddField(
            model_name='studentnotice',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.suborgs', verbose_name='Сургууль'),
        ),
        migrations.AddField(
            model_name='studentnotice',
            name='updated_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='news_up_user', to=settings.AUTH_USER_MODEL, verbose_name='Зассан хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='studentmovement',
            name='created_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='move_cr_user', to=settings.AUTH_USER_MODEL, verbose_name='Бүртгэсэн хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='studentmovement',
            name='destination_school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='new_school', to='core.suborgs', verbose_name='Очих сургуулийн нэр'),
        ),
        migrations.AddField(
            model_name='studentmovement',
            name='group',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.group', verbose_name='Анги'),
        ),
        migrations.AddField(
            model_name='studentmovement',
            name='lesson_season',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.season', verbose_name='Улирал'),
        ),
        migrations.AddField(
            model_name='studentmovement',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='old_school', to='core.suborgs', verbose_name='Сургууль'),
        ),
        migrations.AddField(
            model_name='studentmovement',
            name='student',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='old_st', to='lms.student', verbose_name='Оюутан'),
        ),
        migrations.AddField(
            model_name='studentmovement',
            name='student_new',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='new_st', to='lms.student', verbose_name='Оюутан шинэ код'),
        ),
        migrations.AddField(
            model_name='studentmovement',
            name='updated_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='move_up_user', to=settings.AUTH_USER_MODEL, verbose_name='Зассан хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='studentmedal',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.student', verbose_name='Оюутан'),
        ),
        migrations.AddField(
            model_name='studentlogin',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.student', verbose_name='Оюутан'),
        ),
        migrations.AddField(
            model_name='studentleaverequest',
            name='lesson_season',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.season', verbose_name='Улирал'),
        ),
        migrations.AddField(
            model_name='studentleaverequest',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.student', verbose_name='Оюутан'),
        ),
        migrations.AddField(
            model_name='studentleave',
            name='created_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lv_cr_user', to=settings.AUTH_USER_MODEL, verbose_name='Бүртгэсэн хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='studentleave',
            name='lesson_season',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.season', verbose_name='Улирал'),
        ),
        migrations.AddField(
            model_name='studentleave',
            name='register_status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.studentregister', verbose_name='Бүртгэлийн хэлбэр'),
        ),
        migrations.AddField(
            model_name='studentleave',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.suborgs', verbose_name='Сургууль'),
        ),
        migrations.AddField(
            model_name='studentleave',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.student', verbose_name='Оюутан'),
        ),
        migrations.AddField(
            model_name='studentleave',
            name='updated_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lv_up_user', to=settings.AUTH_USER_MODEL, verbose_name='Зассан хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='studentgym',
            name='gym_payment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.gympaymentsettings', verbose_name='Сонгосон сургалт'),
        ),
        migrations.AddField(
            model_name='studentgym',
            name='payment',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.payment', verbose_name='Төлбөр төлөгдсөн мэдээлэл'),
        ),
        migrations.AddField(
            model_name='studentgym',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.student', verbose_name='Оюутан'),
        ),
        migrations.AddField(
            model_name='studentgrade',
            name='lesson_season',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Улирал', to='lms.season'),
        ),
        migrations.AddField(
            model_name='studentgrade',
            name='student',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='lms.student', verbose_name='Оюутан'),
        ),
        migrations.AddField(
            model_name='studentfamily',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.student', verbose_name='Оюутан'),
        ),
        migrations.AddField(
            model_name='studenteducation',
            name='country',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.country', verbose_name='Улс'),
        ),
        migrations.AddField(
            model_name='studenteducation',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.student', verbose_name='Оюутан'),
        ),
        migrations.AddField(
            model_name='studentdevelop',
            name='created_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cr_user', to=settings.AUTH_USER_MODEL, verbose_name='Үүсгэсэн хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='studentdevelop',
            name='updated_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='up_user', to=settings.AUTH_USER_MODEL, verbose_name='Зассан хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='studentcorrespondscore',
            name='lesson_season',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.season', verbose_name='Улирал'),
        ),
        migrations.AddField(
            model_name='studentcorrespondscore',
            name='profession',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='lms.professiondefinition', verbose_name='Мэргэжил'),
        ),
        migrations.AddField(
            model_name='studentcorrespondscore',
            name='student',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='lms.student', verbose_name='Оюутан'),
        ),
        migrations.AddField(
            model_name='studentcorrespondscore',
            name='student_group',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='lms.group', verbose_name='Суралцаж байсан анги'),
        ),
        migrations.AddField(
            model_name='studentcorrespondlessons',
            name='correspond',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.studentcorrespondscore'),
        ),
        migrations.AddField(
            model_name='studentcorrespondlessons',
            name='correspond_lesson',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.lessonstandart', verbose_name='Дүйцүүлэх хичээл'),
        ),
        migrations.AddField(
            model_name='studentadmissionscore',
            name='admission_lesson',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.admissionlesson', verbose_name='Элсэлтийн шалгалтын хичээл'),
        ),
        migrations.AddField(
            model_name='studentadmissionscore',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.student', verbose_name='Оюутан'),
        ),
        migrations.AddField(
            model_name='studentaddress',
            name='lived_unit1',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='live_unit1', to='core.aimaghot', verbose_name='Амьдарч буй аймаг хот'),
        ),
        migrations.AddField(
            model_name='studentaddress',
            name='lived_unit2',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='live_unit2', to='core.sumduureg', verbose_name='Амьдарч буй сум дүүрэ'),
        ),
        migrations.AddField(
            model_name='studentaddress',
            name='lived_unit3',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='live_unit3', to='core.baghoroo', verbose_name='Амьдарч буй баг хороо'),
        ),
        migrations.AddField(
            model_name='studentaddress',
            name='passport_unit1',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pass_unit1', to='core.aimaghot', verbose_name='Иргэний үнэмлэхний аймаг хот'),
        ),
        migrations.AddField(
            model_name='studentaddress',
            name='passport_unit2',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pass_unit2', to='core.sumduureg', verbose_name='Иргэний үнэмлэхний сум дүүрэг'),
        ),
        migrations.AddField(
            model_name='studentaddress',
            name='passport_unit3',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pass_unit3', to='core.baghoroo', verbose_name='Иргэний үнэмлэхний баг хороо'),
        ),
        migrations.AddField(
            model_name='studentaddress',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.student', verbose_name=''),
        ),
        migrations.AddField(
            model_name='student',
            name='citizenship',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.country', verbose_name='Харьяалал'),
        ),
        migrations.AddField(
            model_name='student',
            name='created_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='student_cr_user', to=settings.AUTH_USER_MODEL, verbose_name='Бүртгэсэн хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='student',
            name='department',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.salbars', verbose_name='Хөтөлбөрийн баг'),
        ),
        migrations.AddField(
            model_name='student',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.group', verbose_name='Анги'),
        ),
        migrations.AddField(
            model_name='student',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.suborgs', verbose_name='Сургууль'),
        ),
        migrations.AddField(
            model_name='student',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.studentregister', verbose_name='Бүртгэлийн байдал'),
        ),
        migrations.AddField(
            model_name='student',
            name='unit1',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.aimaghot', verbose_name='Аймаг хот'),
        ),
        migrations.AddField(
            model_name='student',
            name='unit2',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.sumduureg', verbose_name='Сум дүүрэг'),
        ),
        migrations.AddField(
            model_name='student',
            name='updated_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='student_up_user', to=settings.AUTH_USER_MODEL, verbose_name='Зассан хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='structure',
            name='created_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='create_user', to=settings.AUTH_USER_MODEL, verbose_name='Үүсгэсэн хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='structure',
            name='updated_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='update_user', to=settings.AUTH_USER_MODEL, verbose_name='Зассан хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='stipentstudentfile',
            name='request',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.stipentstudent', verbose_name='Оюутны тэтгэлэгийн хүсэлт'),
        ),
        migrations.AddField(
            model_name='stipentstudent',
            name='stipent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.stipend', verbose_name='Тэтгэлэг'),
        ),
        migrations.AddField(
            model_name='stipentstudent',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.student', verbose_name='Оюутан'),
        ),
        migrations.AddField(
            model_name='stipendfile',
            name='stipend',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.stipend', verbose_name='Зураг'),
        ),
        migrations.AddField(
            model_name='stipend',
            name='lesson_season',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.season', verbose_name='Улирал'),
        ),
        migrations.AddField(
            model_name='stipend',
            name='stipend_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.discounttype', verbose_name='Тэтгэлэгийн төрөл'),
        ),
        migrations.AddField(
            model_name='soulsurvey',
            name='lesson',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lms.lessonstandart', verbose_name='Хичээлийн стандарт'),
        ),
        migrations.AddField(
            model_name='soulsurvey',
            name='lesson_season',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.season', verbose_name='Судалгаа'),
        ),
        migrations.AddField(
            model_name='soulsurvey',
            name='survey',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.survey', verbose_name='Судалгаа'),
        ),
        migrations.AddField(
            model_name='soulsurvey',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.teachers', verbose_name='Багш'),
        ),
        migrations.AddField(
            model_name='seminarstudent',
            name='homework',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.seminar', verbose_name='Гэрийн даалгавар'),
        ),
        migrations.AddField(
            model_name='seminarstudent',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.student', verbose_name='Оюутан'),
        ),
        migrations.AddField(
            model_name='seminar',
            name='created_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Семинар оруулсан хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='scoreregister',
            name='assessment',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.score', verbose_name='Үсгэн үнэлгээ'),
        ),
        migrations.AddField(
            model_name='scoreregister',
            name='created_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='score_cr_user', to=settings.AUTH_USER_MODEL, verbose_name='Бүртгэсэн хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='scoreregister',
            name='grade_letter',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.gradeletter', verbose_name='Үсгэн үнэлгээ'),
        ),
        migrations.AddField(
            model_name='scoreregister',
            name='lesson',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.lessonstandart', verbose_name='Хичээл'),
        ),
        migrations.AddField(
            model_name='scoreregister',
            name='lesson_season',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.season', verbose_name='Улирал'),
        ),
        migrations.AddField(
            model_name='scoreregister',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.suborgs', verbose_name='Сургууль'),
        ),
        migrations.AddField(
            model_name='scoreregister',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.student', verbose_name='Оюутан'),
        ),
        migrations.AddField(
            model_name='scoreregister',
            name='teacher',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.teachers', verbose_name='Багш'),
        ),
        migrations.AddField(
            model_name='scoreregister',
            name='updated_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='score_up_user', to=settings.AUTH_USER_MODEL, verbose_name='Зассан хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='schoollessonlevelvolume',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.suborgs', verbose_name='Сургууль'),
        ),
        migrations.AddField(
            model_name='rule',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='routingslip_answer',
            name='request',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.studentroutingslip', verbose_name='Тойрох хуудас'),
        ),
        migrations.AddField(
            model_name='room',
            name='building',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.building', verbose_name='Хичээлийн байр'),
        ),
        migrations.AddField(
            model_name='room',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.suborgs', verbose_name='Сургууль'),
        ),
        migrations.AddField(
            model_name='requestlogput',
            name='user',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Хэрэглэгчийн ID'),
        ),
        migrations.AddField(
            model_name='requestlogpost',
            name='user',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Хэрэглэгчийн ID'),
        ),
        migrations.AddField(
            model_name='requestlogget',
            name='user',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Хэрэглэгчийн ID'),
        ),
        migrations.AddField(
            model_name='requestlogdelete',
            name='user',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Хэрэглэгчийн ID'),
        ),
        migrations.AddField(
            model_name='registerirts',
            name='qr',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.irtsqr'),
        ),
        migrations.AddField(
            model_name='registerirts',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.student'),
        ),
        migrations.AddField(
            model_name='quezquestions',
            name='choices',
            field=models.ManyToManyField(blank=True, to='lms.quezchoices'),
        ),
        migrations.AddField(
            model_name='quezquestions',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.teachers'),
        ),
        migrations.AddField(
            model_name='quezchoices',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.teachers'),
        ),
        migrations.AddField(
            model_name='questiosubtitle',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.teachers'),
        ),
        migrations.AddField(
            model_name='questiosubtitle',
            name='main',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.questionmaintitle', verbose_name='Үндсэн сэдэв'),
        ),
        migrations.AddField(
            model_name='questiontitle',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.teachers'),
        ),
        migrations.AddField(
            model_name='questiontitle',
            name='lesson',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lms.lessonstandart', verbose_name='Хичээл'),
        ),
        migrations.AddField(
            model_name='questionmaintitle',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.teachers'),
        ),
        migrations.AddField(
            model_name='questionchoices',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.teachers'),
        ),
        migrations.AddField(
            model_name='psychologicaltestquestions',
            name='choices',
            field=models.ManyToManyField(to='lms.psychologicalquestionchoices'),
        ),
        migrations.AddField(
            model_name='psychologicaltestquestions',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='psychologicaltestquestions',
            name='title',
            field=models.ManyToManyField(to='lms.psychologicalquestiontitle', verbose_name='Асуултын ерөнхий сэдэв'),
        ),
        migrations.AddField(
            model_name='psychologicaltest',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.employee'),
        ),
        migrations.AddField(
            model_name='psychologicaltest',
            name='questions',
            field=models.ManyToManyField(to='lms.psychologicaltestquestions'),
        ),
        migrations.AddField(
            model_name='psychologicalquestionchoices',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='psycholocalhelp',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='psy_user', to=settings.AUTH_USER_MODEL, verbose_name='Үүсгэсэн хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='psycholocalhelp',
            name='updated_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Зассан хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='professionintroductionfile',
            name='profession',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.professiondefinition', verbose_name='Мэргэжил'),
        ),
        migrations.AddField(
            model_name='professiondefinition',
            name='created_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='prof_cr_user', to=settings.AUTH_USER_MODEL, verbose_name='Бүртгэсэн хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='professiondefinition',
            name='degree',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.professionaldegree', verbose_name='Боловсролын зэрэг'),
        ),
        migrations.AddField(
            model_name='professiondefinition',
            name='department',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.salbars', verbose_name='Хөтөлбөрийн баг'),
        ),
        migrations.AddField(
            model_name='professiondefinition',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.suborgs', verbose_name='Сургууль'),
        ),
        migrations.AddField(
            model_name='professiondefinition',
            name='updated_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='prof_up_user', to=settings.AUTH_USER_MODEL, verbose_name='Зассан хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='professionaveragescore',
            name='lesson_season',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lms.season', verbose_name='Идэвхтэй улирал'),
        ),
        migrations.AddField(
            model_name='professionaveragescore',
            name='profession',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.professiondefinition', verbose_name='Мэргэжил'),
        ),
        migrations.AddField(
            model_name='profession_songonkredit',
            name='profession',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.professiondefinition', verbose_name='Мэргэжил'),
        ),
        migrations.AddField(
            model_name='pollee',
            name='choosed_choices',
            field=models.ManyToManyField(blank=True, to='lms.surveychoices', verbose_name='Сонгосон сонголтууд'),
        ),
        migrations.AddField(
            model_name='pollee',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.surveyquestions', verbose_name='Асуулт'),
        ),
        migrations.AddField(
            model_name='pollee',
            name='soul_survey',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='lms.soulsurvey', verbose_name='Сэтгэл ханамжийн судалгаа'),
        ),
        migrations.AddField(
            model_name='pollee',
            name='student',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='lms.student', verbose_name='Оюутан'),
        ),
        migrations.AddField(
            model_name='pollee',
            name='survey',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='lms.survey', verbose_name='Судалгаа'),
        ),
        migrations.AddField(
            model_name='pollee',
            name='teacher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.teachers', verbose_name='Багш'),
        ),
        migrations.AddField(
            model_name='permissionsteacherscore',
            name='created_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pts_cr_user', to=settings.AUTH_USER_MODEL, verbose_name='Бүртгэсэн хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='permissionsteacherscore',
            name='lesson_season',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.season', verbose_name='Улирал'),
        ),
        migrations.AddField(
            model_name='permissionsteacherscore',
            name='teacher_scoretype',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lms.lesson_teacher_scoretype', verbose_name='Багшийн дүгнэх хэлбэр'),
        ),
        migrations.AddField(
            model_name='permissionsteacherscore',
            name='updated_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pts_up_user', to=settings.AUTH_USER_MODEL, verbose_name='Зассан хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='permissionsstudentchoice',
            name='created_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='psc_cr_user', to=settings.AUTH_USER_MODEL, verbose_name='Бүртгэсэн хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='permissionsstudentchoice',
            name='lesson_season',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.season', verbose_name='Улирал'),
        ),
        migrations.AddField(
            model_name='permissionsstudentchoice',
            name='student',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lms.student', verbose_name='Оюутан'),
        ),
        migrations.AddField(
            model_name='permissionsstudentchoice',
            name='updated_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='psc_up_user', to=settings.AUTH_USER_MODEL, verbose_name='Зассан хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='permissionsotherinterval',
            name='created_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='poi_cr_user', to=settings.AUTH_USER_MODEL, verbose_name='Бүртгэсэн хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='permissionsotherinterval',
            name='lesson_season',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.season', verbose_name='Улирал'),
        ),
        migrations.AddField(
            model_name='permissionsotherinterval',
            name='updated_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='poi_up_user', to=settings.AUTH_USER_MODEL, verbose_name='Зассан хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='paymentsettings',
            name='created_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ps_cr_user', to=settings.AUTH_USER_MODEL, verbose_name='Бүртгэсэн хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='paymentsettings',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.group', verbose_name='Анги'),
        ),
        migrations.AddField(
            model_name='paymentsettings',
            name='lesson_season',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.season', verbose_name='Улирал'),
        ),
        migrations.AddField(
            model_name='paymentsettings',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.suborgs', verbose_name='Сургууль'),
        ),
        migrations.AddField(
            model_name='paymentsettings',
            name='updated_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ps_up_user', to=settings.AUTH_USER_MODEL, verbose_name='Зассан хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='paymentseasonclosing',
            name='created_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Хаалт хийсэн хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='paymentseasonclosing',
            name='lesson_season',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.season', verbose_name='Улирал'),
        ),
        migrations.AddField(
            model_name='paymentseasonclosing',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.suborgs', verbose_name='Бүрэлдэхүүн сургууль'),
        ),
        migrations.AddField(
            model_name='paymentestimate',
            name='created_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pe_cr_user', to=settings.AUTH_USER_MODEL, verbose_name='Бүртгэсэн хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='paymentestimate',
            name='lesson_season',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.season', verbose_name='Улирал'),
        ),
        migrations.AddField(
            model_name='paymentestimate',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.suborgs', verbose_name='Сургууль'),
        ),
        migrations.AddField(
            model_name='paymentestimate',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.student', verbose_name='Оюутан'),
        ),
        migrations.AddField(
            model_name='paymentestimate',
            name='updated_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pe_up_user', to=settings.AUTH_USER_MODEL, verbose_name='Зассан хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='paymentdiscount',
            name='created_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pd_cr_user', to=settings.AUTH_USER_MODEL, verbose_name='Бүртгэсэн хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='paymentdiscount',
            name='lesson_season',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.season', verbose_name='Улирал'),
        ),
        migrations.AddField(
            model_name='paymentdiscount',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.suborgs', verbose_name='Сургууль'),
        ),
        migrations.AddField(
            model_name='paymentdiscount',
            name='stipent_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.discounttype', verbose_name='Хөнгөлөлтийн төрөл'),
        ),
        migrations.AddField(
            model_name='paymentdiscount',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.student', verbose_name='Оюутан'),
        ),
        migrations.AddField(
            model_name='paymentdiscount',
            name='updated_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pd_up_user', to=settings.AUTH_USER_MODEL, verbose_name='Зассан хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='paymentbeginbalance',
            name='created_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pbb_cr_user', to=settings.AUTH_USER_MODEL, verbose_name='Бүртгэсэн хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='paymentbeginbalance',
            name='lesson_season',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.season', verbose_name='Улирал'),
        ),
        migrations.AddField(
            model_name='paymentbeginbalance',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.suborgs', verbose_name='Сургууль'),
        ),
        migrations.AddField(
            model_name='paymentbeginbalance',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.student', verbose_name='Оюутан'),
        ),
        migrations.AddField(
            model_name='paymentbeginbalance',
            name='updated_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pbb_up_user', to=settings.AUTH_USER_MODEL, verbose_name='Зассан хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='paymentbalance',
            name='created_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pb_cr_user', to=settings.AUTH_USER_MODEL, verbose_name='Бүртгэсэн хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='paymentbalance',
            name='lesson_season',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.season', verbose_name='Улирал'),
        ),
        migrations.AddField(
            model_name='paymentbalance',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.suborgs', verbose_name='Сургууль'),
        ),
        migrations.AddField(
            model_name='paymentbalance',
            name='student',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lms.student', verbose_name='Оюутан'),
        ),
        migrations.AddField(
            model_name='paymentbalance',
            name='updated_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pb_up_user', to=settings.AUTH_USER_MODEL, verbose_name='Зассан хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='payment',
            name='student',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lms.student'),
        ),
        migrations.AddField(
            model_name='payment',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='parttimeteachercreditestimation',
            name='lesson',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.lessonstandart', verbose_name='Хичээл'),
        ),
        migrations.AddField(
            model_name='parttimeteachercreditestimation',
            name='lesson_season',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.season', verbose_name='Улирал'),
        ),
        migrations.AddField(
            model_name='parttimeteachercreditestimation',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.teachers', verbose_name='Багш'),
        ),
        migrations.AddField(
            model_name='otheruserordergym',
            name='gym_payment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.gympaymentsettings', verbose_name='Сонгосон сургалт'),
        ),
        migrations.AddField(
            model_name='otheruserordergym',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.teachers', verbose_name='Оюутан'),
        ),
        migrations.AddField(
            model_name='otherusergym',
            name='gym_payment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.gympaymentsettings', verbose_name='Сонгосон сургалт'),
        ),
        migrations.AddField(
            model_name='otherusergym',
            name='payment',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.payment', verbose_name='Төлбөр төлөгдсөн мэдээлэл'),
        ),
        migrations.AddField(
            model_name='otherusergym',
            name='trainer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.teachers', verbose_name='Багш болон гадны суралцагч'),
        ),
        migrations.AddField(
            model_name='otherstudentinformation',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='otheronlinepayment',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.teachers', verbose_name='Оюутан'),
        ),
        migrations.AddField(
            model_name='onlineweekstudent',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.student', verbose_name='Оюутан'),
        ),
        migrations.AddField(
            model_name='onlineweekstudent',
            name='week',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.onlineweek', verbose_name='7 хоног'),
        ),
        migrations.AddField(
            model_name='onlineweek',
            name='before_week',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='lms.onlineweek', verbose_name='Хамаарах өмнөх 7 хоног'),
        ),
        migrations.AddField(
            model_name='onlineweek',
            name='challenge',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.challenge', verbose_name='7 хоногийн шалгалт'),
        ),
        migrations.AddField(
            model_name='onlineweek',
            name='created_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Үүсгэсэн хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='onlineweek',
            name='homework',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.homework', verbose_name='Гэрийн даалгавар'),
        ),
        migrations.AddField(
            model_name='onlineweek',
            name='materials',
            field=models.ManyToManyField(to='lms.weekmaterials', verbose_name='Тухайн 7 хоногийн материалууд'),
        ),
        migrations.AddField(
            model_name='onlineuser',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='lms.studentlogin', verbose_name='online хэрглэгч'),
        ),
        migrations.AddField(
            model_name='onlinesubinfo',
            name='parent_title',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.onlineinfo', verbose_name='Parent'),
        ),
        migrations.AddField(
            model_name='onlinesubinfo',
            name='quiz',
            field=models.ManyToManyField(blank=True, to='lms.quezquestions', verbose_name='Цахим сургалтын сорил шалгалт'),
        ),
        migrations.AddField(
            model_name='onlinelesson',
            name='created_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Үүсгэсэн хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='onlinelesson',
            name='lesson',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='lms.lessonstandart', verbose_name='Хичээл'),
        ),
        migrations.AddField(
            model_name='onlinelesson',
            name='students',
            field=models.ManyToManyField(to='lms.student', verbose_name='Хичээл үзэх оюутнууд'),
        ),
        migrations.AddField(
            model_name='onlinelesson',
            name='teacher',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.teachers', verbose_name='Багш'),
        ),
        migrations.AddField(
            model_name='onlinelesson',
            name='weeks',
            field=models.ManyToManyField(blank=True, to='lms.onlineweek', verbose_name='7 хоногууд'),
        ),
        migrations.AddField(
            model_name='onlineinfo',
            name='elearn',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='lms.elearn', verbose_name='Цахим хичээл'),
        ),
        migrations.AddField(
            model_name='onlineinfo',
            name='related_info',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='lms.onlineinfo', verbose_name='Өмнөх бүлгээс хамаарах эсэх'),
        ),
        migrations.AddField(
            model_name='notificationstudentstate',
            name='notif',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.notification'),
        ),
        migrations.AddField(
            model_name='notificationstudentstate',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.studentlogin'),
        ),
        migrations.AddField(
            model_name='notificationstate',
            name='notif',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.notification'),
        ),
        migrations.AddField(
            model_name='notificationstate',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='mentalstudent',
            name='challenge',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.psychologicaltest', verbose_name='Сэтгэлзүйн сорил'),
        ),
        migrations.AddField(
            model_name='mentalstudent',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='lms.student', verbose_name='Оюутан'),
        ),
        migrations.AddField(
            model_name='library',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='l_cr_user', to=settings.AUTH_USER_MODEL, verbose_name='Үүсгэсэн хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='library',
            name='updated_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Зассан хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='lessonstandart',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.lessoncategory', verbose_name='Хичээлийн ангилал'),
        ),
        migrations.AddField(
            model_name='lessonstandart',
            name='created_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lesson_cr_user', to=settings.AUTH_USER_MODEL, verbose_name='Бүртгэсэн хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='lessonstandart',
            name='department',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.salbars', verbose_name='Хөтөлбөрийн баг'),
        ),
        migrations.AddField(
            model_name='lessonstandart',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.suborgs', verbose_name='Сургууль'),
        ),
        migrations.AddField(
            model_name='lessonstandart',
            name='updated_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lesson_up_user', to=settings.AUTH_USER_MODEL, verbose_name='Зассан хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='lessonmaterial',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Материал оруулсан хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='lesson_to_teacher',
            name='lesson',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.lessonstandart', verbose_name='Хичээл'),
        ),
        migrations.AddField(
            model_name='lesson_to_teacher',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.teachers', verbose_name='Багш'),
        ),
        migrations.AddField(
            model_name='lesson_title_plan',
            name='lesson',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.lessonstandart', verbose_name='Хичээл'),
        ),
        migrations.AddField(
            model_name='lesson_teacher_scoretype',
            name='lesson_teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.lesson_to_teacher', verbose_name='Хичээл багш'),
        ),
        migrations.AddField(
            model_name='lesson_materials',
            name='lesson',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.lessonstandart', verbose_name='Хичээл'),
        ),
        migrations.AddField(
            model_name='lesson_materials',
            name='teacher',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.teachers', verbose_name='Багш'),
        ),
        migrations.AddField(
            model_name='lesson_material_file',
            name='material',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.lesson_materials', verbose_name='Материалийн файл'),
        ),
        migrations.AddField(
            model_name='lesson_assignment_student_file',
            name='student_assignment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.lesson_assignment_student', verbose_name='Даалгаварын хариу'),
        ),
        migrations.AddField(
            model_name='lesson_assignment_student',
            name='assignment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.lesson_assignment', verbose_name='Даалгавар'),
        ),
        migrations.AddField(
            model_name='lesson_assignment_student',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.student', verbose_name='Оюутан'),
        ),
        migrations.AddField(
            model_name='lesson_assignment',
            name='lesson_material',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.lesson_materials', verbose_name='Даалгаврын материал'),
        ),
        migrations.AddField(
            model_name='leaverequest_answer',
            name='request',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.studentleaverequest', verbose_name='Чөлөөний хүсэлт'),
        ),
        migrations.AddField(
            model_name='learningplan',
            name='created_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='plan_cr_user', to=settings.AUTH_USER_MODEL, verbose_name='Бүртгэсэн хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='learningplan',
            name='department',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.salbars', verbose_name='Хөтөлбөрийн баг'),
        ),
        migrations.AddField(
            model_name='learningplan',
            name='group_lesson',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='group_less', to='lms.lessonstandart', verbose_name='Дүн нэгтгэх хичээл'),
        ),
        migrations.AddField(
            model_name='learningplan',
            name='lesson',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='less', to='lms.lessonstandart', verbose_name='Хичээл'),
        ),
        migrations.AddField(
            model_name='learningplan',
            name='previous_lesson',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='prev_less', to='lms.lessonstandart', verbose_name='Өмнөх холбоо хичээл'),
        ),
        migrations.AddField(
            model_name='learningplan',
            name='profession',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.professiondefinition', verbose_name='Мэргэжил'),
        ),
        migrations.AddField(
            model_name='learningplan',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.suborgs', verbose_name='Сургууль'),
        ),
        migrations.AddField(
            model_name='learningplan',
            name='updated_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='plan_up_user', to=settings.AUTH_USER_MODEL, verbose_name='Зассан хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='learningcalendar',
            name='created_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lc_cr_user', to=settings.AUTH_USER_MODEL, verbose_name='Бүртгэсэн хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='learningcalendar',
            name='updated_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lc_up_user', to=settings.AUTH_USER_MODEL, verbose_name='Зассан хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='irtsqr',
            name='timetable',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.timetable', verbose_name='Хичээлийн хуваарь'),
        ),
        migrations.AddField(
            model_name='homeworkstudent',
            name='homework',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.homework', verbose_name='Гэрийн даалгавар'),
        ),
        migrations.AddField(
            model_name='homeworkstudent',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.student', verbose_name='Оюутан'),
        ),
        migrations.AddField(
            model_name='homework',
            name='created_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Материал оруулсан хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='healthhelp',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='help_user', to=settings.AUTH_USER_MODEL, verbose_name='Үүсгэсэн хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='healthhelp',
            name='updated_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Зассан хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='health',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='health_user', to=settings.AUTH_USER_MODEL, verbose_name='Үүсгэсэн хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='health',
            name='updated_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Зассан хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='gympaymentsettings',
            name='room',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.room', verbose_name='Байрлал'),
        ),
        migrations.AddField(
            model_name='group',
            name='degree',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.professionaldegree', verbose_name='Боловсролын зэрэг'),
        ),
        migrations.AddField(
            model_name='group',
            name='department',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.salbars', verbose_name='Хөтөлбөрийн баг'),
        ),
        migrations.AddField(
            model_name='group',
            name='learning_status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.learning', verbose_name='Суралцах хэлбэр'),
        ),
        migrations.AddField(
            model_name='group',
            name='profession',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.professiondefinition', verbose_name='Мэргэжил'),
        ),
        migrations.AddField(
            model_name='group',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.suborgs', verbose_name='Сургууль'),
        ),
        migrations.AddField(
            model_name='group',
            name='teacher',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.teachers', verbose_name='Ангийн багш'),
        ),
        migrations.AddField(
            model_name='graduationwork',
            name='created_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='grad_cr_user', to=settings.AUTH_USER_MODEL, verbose_name='Бүртгэсэн хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='graduationwork',
            name='lesson',
            field=models.ManyToManyField(blank=True, to='lms.lessonstandart', verbose_name='Хичээл'),
        ),
        migrations.AddField(
            model_name='graduationwork',
            name='lesson_season',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.season', verbose_name='Улирал'),
        ),
        migrations.AddField(
            model_name='graduationwork',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.student', verbose_name='Оюутан'),
        ),
        migrations.AddField(
            model_name='graduationwork',
            name='teacher',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.teachers'),
        ),
        migrations.AddField(
            model_name='graduationwork',
            name='updated_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='grad_up_user', to=settings.AUTH_USER_MODEL, verbose_name='Зассан хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='examtimetable',
            name='created_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ett_cr_user', to=settings.AUTH_USER_MODEL, verbose_name='Бүртгэсэн хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='examtimetable',
            name='lesson',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.lessonstandart', verbose_name='Хичээл'),
        ),
        migrations.AddField(
            model_name='examtimetable',
            name='lesson_season',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.season', verbose_name='Улирал'),
        ),
        migrations.AddField(
            model_name='examtimetable',
            name='room',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lms.room', verbose_name='Шалгалт авах өрөө'),
        ),
        migrations.AddField(
            model_name='examtimetable',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.suborgs', verbose_name='Сургууль'),
        ),
        migrations.AddField(
            model_name='examtimetable',
            name='teacher',
            field=models.ManyToManyField(to='core.teachers', verbose_name='Хянах багш'),
        ),
        migrations.AddField(
            model_name='examtimetable',
            name='updated_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ett_up_user', to=settings.AUTH_USER_MODEL, verbose_name='Зассан хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='exam_to_student',
            name='exam',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.exam_repeat', verbose_name='Шалгалтын хуваарь'),
        ),
        migrations.AddField(
            model_name='exam_to_student',
            name='student',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lms.student', verbose_name='Оюутан'),
        ),
        migrations.AddField(
            model_name='exam_to_group',
            name='exam',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.examtimetable', verbose_name='Шалгалтын хуваарь'),
        ),
        migrations.AddField(
            model_name='exam_to_group',
            name='group',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lms.group', verbose_name='Анги'),
        ),
        migrations.AddField(
            model_name='exam_to_group',
            name='student',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lms.student', verbose_name='Оюутан'),
        ),
        migrations.AddField(
            model_name='exam_repeat',
            name='created_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='er_cr_user', to=settings.AUTH_USER_MODEL, verbose_name='Бүртгэсэн хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='exam_repeat',
            name='lesson',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.lessonstandart', verbose_name='Хичээл'),
        ),
        migrations.AddField(
            model_name='exam_repeat',
            name='lesson_season',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.season', verbose_name='Улирал'),
        ),
        migrations.AddField(
            model_name='exam_repeat',
            name='room',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lms.room', verbose_name='Шалгалт авах өрөө'),
        ),
        migrations.AddField(
            model_name='exam_repeat',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.suborgs', verbose_name='Сургууль'),
        ),
        migrations.AddField(
            model_name='exam_repeat',
            name='teacher',
            field=models.ManyToManyField(to='core.teachers', verbose_name='Хянах багш'),
        ),
        migrations.AddField(
            model_name='exam_repeat',
            name='updated_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='er_up_user', to=settings.AUTH_USER_MODEL, verbose_name='Зассан хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='elearnprogress',
            name='choosed_choices',
            field=models.ManyToManyField(blank=True, to='lms.quezchoices', verbose_name='Сонгосон сонголтууд'),
        ),
        migrations.AddField(
            model_name='elearnprogress',
            name='online_sub_info',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.onlinesubinfo'),
        ),
        migrations.AddField(
            model_name='elearnprogress',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.quezquestions', verbose_name='Асуулт'),
        ),
        migrations.AddField(
            model_name='elearnprogress',
            name='score_set_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.teachers', verbose_name='Оюутны авсан оноог өгсөн багш'),
        ),
        migrations.AddField(
            model_name='elearnprogress',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.student'),
        ),
        migrations.AddField(
            model_name='elearn',
            name='created_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Үүсгэсэн хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='elearn',
            name='lesson',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='lms.lessonstandart', verbose_name='Хичээл'),
        ),
        migrations.AddField(
            model_name='elearn',
            name='students',
            field=models.ManyToManyField(blank=True, to='lms.student', verbose_name='Хичээл үзэх оюутнууд'),
        ),
        migrations.AddField(
            model_name='elearn',
            name='teacher',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.teachers', verbose_name='Багш'),
        ),
        migrations.AddField(
            model_name='dormitorystudent',
            name='room',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.dormitoryroom', verbose_name='Өрөөний дугаар'),
        ),
        migrations.AddField(
            model_name='dormitorystudent',
            name='room_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.dormitoryroomtype', verbose_name='Хүсэлт гаргах өрөөний төрөл'),
        ),
        migrations.AddField(
            model_name='dormitorystudent',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.student', verbose_name='Оюутан'),
        ),
        migrations.AddField(
            model_name='dormitoryroomfile',
            name='request',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.dormitoryroomtype', verbose_name='Өрөөний төрөл'),
        ),
        migrations.AddField(
            model_name='dormitoryroom',
            name='building',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='lms.dormitorybuilding', verbose_name='Хичээлийн байр'),
        ),
        migrations.AddField(
            model_name='dormitoryroom',
            name='room_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.dormitoryroomtype', verbose_name='Өрөөний төрөл'),
        ),
        migrations.AddField(
            model_name='dormitoryregistrationschedule',
            name='buildings',
            field=models.ManyToManyField(to='lms.dormitorybuilding', verbose_name='Дотуур байр'),
        ),
        migrations.AddField(
            model_name='dormitorypayment',
            name='room_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.dormitoryroomtype', verbose_name='Өрөөний төрөл'),
        ),
        migrations.AddField(
            model_name='dormitoryotherstudent',
            name='room',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.dormitoryroom', verbose_name='Өрөөний дугаар'),
        ),
        migrations.AddField(
            model_name='dormitoryotherstudent',
            name='room_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.dormitoryroomtype', verbose_name='Хүсэлт гаргах өрөөний төрөл'),
        ),
        migrations.AddField(
            model_name='dormitoryotherstudent',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.teachers', verbose_name='Хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='dormitoryotherbalance',
            name='payment',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.payment', verbose_name='Онлайнаар төлөлт хийсэн мэдээлэл'),
        ),
        migrations.AddField(
            model_name='dormitoryotherbalance',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.teachers', verbose_name='Хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='dormitoryfamilycontract',
            name='room',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.dormitoryroom', verbose_name='Өрөөний дугаар'),
        ),
        migrations.AddField(
            model_name='dormitoryfamilycontract',
            name='room_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.dormitoryroomtype', verbose_name='Хүсэлт гаргах өрөөний төрөл'),
        ),
        migrations.AddField(
            model_name='dormitoryfamilycontract',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.teachers', verbose_name='Түрээслэгч'),
        ),
        migrations.AddField(
            model_name='dormitoryestimationfamily',
            name='contract',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.dormitoryfamilycontract', verbose_name='Гэрээ'),
        ),
        migrations.AddField(
            model_name='dormitorybalance',
            name='payment',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.payment', verbose_name='Онлайнаар төлөлт хийсэн мэдээлэл'),
        ),
        migrations.AddField(
            model_name='dormitorybalance',
            name='student',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lms.student', verbose_name='Оюутан'),
        ),
        migrations.AddField(
            model_name='definitionsignature',
            name='school',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.schools', verbose_name='Харьяалагдах сургууль'),
        ),
        migrations.AddField(
            model_name='correspond_answer',
            name='request',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.studentcorrespondscore', verbose_name='Дүйцүүлэлтийн хүсэлт'),
        ),
        migrations.AddField(
            model_name='complaint_unit',
            name='position',
            field=models.ManyToManyField(blank=True, to='core.orgposition', verbose_name='Хамаарах албан тушаал'),
        ),
        migrations.AddField(
            model_name='complaint_answer',
            name='request',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.complaint', verbose_name='Өргөдөл'),
        ),
        migrations.AddField(
            model_name='complaint',
            name='lesson_season',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.season', verbose_name='Улирал'),
        ),
        migrations.AddField(
            model_name='complaint',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.student', verbose_name='Оюутан'),
        ),
        migrations.AddField(
            model_name='clubfile',
            name='club',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.club', verbose_name='Клуб'),
        ),
        migrations.AddField(
            model_name='chatroom',
            name='member',
            field=models.ManyToManyField(to='lms.studentlogin', verbose_name='Тухайн өрөөнд харъялагдах хэрэглэгчидийн жагсаалт'),
        ),
        migrations.AddField(
            model_name='chatmessage',
            name='chat',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.chatroom', verbose_name='чат өрөө'),
        ),
        migrations.AddField(
            model_name='chatmessage',
            name='readed_user',
            field=models.ManyToManyField(related_name='readed_user', to='lms.studentlogin', verbose_name='тухайн чатыг уншсан хэрэглэгчид'),
        ),
        migrations.AddField(
            model_name='chatmessage',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.studentlogin', verbose_name='чат бичсэн хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='challengestudents',
            name='challenge',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.challenge'),
        ),
        migrations.AddField(
            model_name='challengestudents',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.student'),
        ),
        migrations.AddField(
            model_name='challengesedevcount',
            name='lesson_title',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.lesson_title_plan', verbose_name='Хичээлийн гарчиг'),
        ),
        migrations.AddField(
            model_name='challengequestions',
            name='choices',
            field=models.ManyToManyField(to='lms.questionchoices'),
        ),
        migrations.AddField(
            model_name='challengequestions',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.teachers'),
        ),
        migrations.AddField(
            model_name='challengequestions',
            name='graduate_title',
            field=models.ManyToManyField(to='lms.questiosubtitle', verbose_name='Асуултын ерөнхий сэдэв'),
        ),
        migrations.AddField(
            model_name='challengequestions',
            name='lesson_season',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='lms.season'),
        ),
        migrations.AddField(
            model_name='challengequestions',
            name='subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.lesson_title_plan'),
        ),
        migrations.AddField(
            model_name='challengequestions',
            name='title',
            field=models.ManyToManyField(to='lms.questiontitle', verbose_name='Асуултын ерөнхий сэдэв'),
        ),
        migrations.AddField(
            model_name='challengequestioncount',
            name='challenge',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.challenge', verbose_name='Шалгалт'),
        ),
        migrations.AddField(
            model_name='challengequestioncount',
            name='question_counts',
            field=models.ManyToManyField(to='lms.challengesedevcount'),
        ),
        migrations.AddField(
            model_name='challengequestioncount',
            name='updated_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='challengeelseltuser',
            name='challenge',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.challenge'),
        ),
        migrations.AddField(
            model_name='challenge',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.teachers'),
        ),
        migrations.AddField(
            model_name='challenge',
            name='deleted_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='deleted', to='core.teachers'),
        ),
        migrations.AddField(
            model_name='challenge',
            name='lesson',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='lms.lessonstandart', verbose_name='Хичээл'),
        ),
        migrations.AddField(
            model_name='challenge',
            name='lesson_season',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='lms.season'),
        ),
        migrations.AddField(
            model_name='challenge',
            name='questions',
            field=models.ManyToManyField(to='lms.challengequestions'),
        ),
        migrations.AddField(
            model_name='challenge',
            name='student',
            field=models.ManyToManyField(blank=True, to='lms.student', verbose_name='Оюутнууд'),
        ),
        migrations.AddField(
            model_name='challenge',
            name='survey',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.survey', verbose_name='Судалгаа'),
        ),
        migrations.AddField(
            model_name='challenge',
            name='updated_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='calculatedgpaofdiploma',
            name='grade_letter',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lms.gradeletter', verbose_name='Үсгэн үнэлгээ'),
        ),
        migrations.AddField(
            model_name='calculatedgpaofdiploma',
            name='lesson',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lms.lessonstandart', verbose_name='Хичээл'),
        ),
        migrations.AddField(
            model_name='calculatedgpaofdiploma',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.student'),
        ),
        migrations.AddField(
            model_name='biydaaltstudent',
            name='biydaalt',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.biydaalt', verbose_name='7 хоног'),
        ),
        migrations.AddField(
            model_name='biydaaltstudent',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.student', verbose_name='Оюутан'),
        ),
        migrations.AddField(
            model_name='biydaalt',
            name='check_week',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.onlineweek', verbose_name='Шалгах 7 хоног'),
        ),
        migrations.AddField(
            model_name='biydaalt',
            name='created_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Бие даалт оруулсан хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='attachmentconfig',
            name='group',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='lms.group', verbose_name='Мэргэжил'),
        ),
        migrations.AddField(
            model_name='announcementcomment',
            name='announcement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.studentnotice', verbose_name='Зар мэдээ'),
        ),
        migrations.AddField(
            model_name='announcementcomment',
            name='student',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='lms.student', verbose_name='Оюутан'),
        ),
        migrations.AddField(
            model_name='announcementcomment',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='announcement',
            name='created_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Үүсгэсэн хэрэглэгч'),
        ),
        migrations.AddField(
            model_name='announcement',
            name='online_lesson',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='lms.onlinelesson', verbose_name='Онлайн хичээл'),
        ),
        migrations.AddField(
            model_name='announcement',
            name='timetable',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='lms.timetable', verbose_name='Хичээлийн хуваарь'),
        ),
        migrations.AddField(
            model_name='admissionxyanalttoo',
            name='indicator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.admissionindicator', verbose_name='Шалгуур үзүүлэлт'),
        ),
        migrations.AddField(
            model_name='admissionregisterprofession',
            name='admission',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.admissionregister', verbose_name='Элсэлт'),
        ),
        migrations.AddField(
            model_name='admissionregisterprofession',
            name='profession',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.professiondefinition', verbose_name='Мэргэжил'),
        ),
        migrations.AddField(
            model_name='admissionindicator',
            name='admission_prof',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lms.admissionregisterprofession', verbose_name='Мэргэжил'),
        ),
        migrations.AddField(
            model_name='admissionbottomscore',
            name='admission_lesson',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.admissionlesson', verbose_name='ЭЕШ өгсөн хичээл'),
        ),
        migrations.AddField(
            model_name='admissionbottomscore',
            name='profession',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lms.professiondefinition', verbose_name='Мэргэжил'),
        ),
        migrations.AddField(
            model_name='accesshistorylms',
            name='student',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='lms.studentlogin', verbose_name='Оюутан'),
        ),
        migrations.AddField(
            model_name='accesshistorylms',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Хэрэглэгч'),
        ),
        migrations.AddConstraint(
            model_name='timetable',
            constraint=models.UniqueConstraint(fields=('lesson_year', 'lesson_season', 'teacher', 'day', 'time', 'odd_even', 'begin_date', 'week_number'), name='teacher constraint'),
        ),
        migrations.AddConstraint(
            model_name='timetable',
            constraint=models.UniqueConstraint(fields=('lesson_year', 'lesson_season', 'room', 'day', 'time', 'odd_even', 'begin_date', 'week_number'), name='room constraint'),
        ),
        migrations.AlterUniqueTogether(
            name='systemsettings',
            unique_together={('active_lesson_year', 'active_lesson_season')},
        ),
        migrations.AlterUniqueTogether(
            name='studentleave',
            unique_together={('student', 'lesson_year', 'lesson_season')},
        ),
        migrations.AlterUniqueTogether(
            name='scoreregister',
            unique_together={('student', 'lesson', 'lesson_year', 'lesson_season', 'school', 'is_delete')},
        ),
        migrations.AlterUniqueTogether(
            name='room',
            unique_together={('code', 'building')},
        ),
        migrations.AlterUniqueTogether(
            name='professionaveragescore',
            unique_together={('profession', 'lesson_year', 'lesson_season')},
        ),
        migrations.AlterUniqueTogether(
            name='permissionsteacherscore',
            unique_together={('lesson_year', 'lesson_season', 'teacher_scoretype')},
        ),
        migrations.AlterUniqueTogether(
            name='permissionsstudentchoice',
            unique_together={('lesson_year', 'lesson_season', 'student')},
        ),
        migrations.AlterUniqueTogether(
            name='paymentsettings',
            unique_together={('group', 'lesson_year', 'lesson_season')},
        ),
        migrations.AlterUniqueTogether(
            name='paymentestimate',
            unique_together={('student', 'lesson_year', 'lesson_season', 'school')},
        ),
        migrations.AlterUniqueTogether(
            name='paymentbeginbalance',
            unique_together={('student', 'lesson_year', 'lesson_season')},
        ),
        migrations.AlterUniqueTogether(
            name='lesson_to_teacher',
            unique_together={('lesson', 'teacher')},
        ),
        migrations.AlterUniqueTogether(
            name='lesson_title_plan',
            unique_together={('lesson', 'week', 'lesson_type')},
        ),
        migrations.AlterUniqueTogether(
            name='lesson_teacher_scoretype',
            unique_together={('lesson_teacher', 'score_type')},
        ),
        migrations.AlterUniqueTogether(
            name='learningplan',
            unique_together={('profession', 'lesson', 'school')},
        ),
        migrations.AlterUniqueTogether(
            name='group',
            unique_together={('profession', 'degree', 'learning_status', 'join_year', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='graduationwork',
            unique_together={('student', 'lesson_year', 'lesson_season')},
        ),
    ]
